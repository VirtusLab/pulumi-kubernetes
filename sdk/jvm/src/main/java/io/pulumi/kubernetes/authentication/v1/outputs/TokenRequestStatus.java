// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.authentication.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class TokenRequestStatus {
    private final String expirationTimestamp;
    private final String token;

    @OutputCustomType.Constructor({"expirationTimestamp","token"})
    private TokenRequestStatus(
        String expirationTimestamp,
        String token) {
        this.expirationTimestamp = Objects.requireNonNull(expirationTimestamp);
        this.token = Objects.requireNonNull(token);
    }

    public String getExpirationTimestamp() {
        return this.expirationTimestamp;
    }
    public String getToken() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TokenRequestStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationTimestamp;
        private String token;

        public Builder() {
    	      // Empty
        }

        public Builder(TokenRequestStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTimestamp = defaults.expirationTimestamp;
    	      this.token = defaults.token;
        }

        public Builder setExpirationTimestamp(String expirationTimestamp) {
            this.expirationTimestamp = Objects.requireNonNull(expirationTimestamp);
            return this;
        }

        public Builder setToken(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }

        public TokenRequestStatus build() {
            return new TokenRequestStatus(expirationTimestamp, token);
        }
    }
}
