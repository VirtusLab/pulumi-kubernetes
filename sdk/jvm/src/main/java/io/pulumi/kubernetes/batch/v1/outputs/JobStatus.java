// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.batch.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class JobStatus {
    private final @Nullable Integer active;
    private final @Nullable String completedIndexes;
    private final @Nullable String completionTime;
    private final @Nullable List<io.pulumi.kubernetes.batch.v1.outputs.JobCondition> conditions;
    private final @Nullable Integer failed;
    private final @Nullable String startTime;
    private final @Nullable Integer succeeded;

    @OutputCustomType.Constructor({"active","completedIndexes","completionTime","conditions","failed","startTime","succeeded"})
    private JobStatus(
        @Nullable Integer active,
        @Nullable String completedIndexes,
        @Nullable String completionTime,
        @Nullable List<io.pulumi.kubernetes.batch.v1.outputs.JobCondition> conditions,
        @Nullable Integer failed,
        @Nullable String startTime,
        @Nullable Integer succeeded) {
        this.active = active;
        this.completedIndexes = completedIndexes;
        this.completionTime = completionTime;
        this.conditions = conditions;
        this.failed = failed;
        this.startTime = startTime;
        this.succeeded = succeeded;
    }

    public Optional<Integer> getActive() {
        return Optional.ofNullable(this.active);
    }
    public Optional<String> getCompletedIndexes() {
        return Optional.ofNullable(this.completedIndexes);
    }
    public Optional<String> getCompletionTime() {
        return Optional.ofNullable(this.completionTime);
    }
    public List<io.pulumi.kubernetes.batch.v1.outputs.JobCondition> getConditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    public Optional<Integer> getFailed() {
        return Optional.ofNullable(this.failed);
    }
    public Optional<String> getStartTime() {
        return Optional.ofNullable(this.startTime);
    }
    public Optional<Integer> getSucceeded() {
        return Optional.ofNullable(this.succeeded);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStatus defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer active;
        private @Nullable String completedIndexes;
        private @Nullable String completionTime;
        private @Nullable List<io.pulumi.kubernetes.batch.v1.outputs.JobCondition> conditions;
        private @Nullable Integer failed;
        private @Nullable String startTime;
        private @Nullable Integer succeeded;

        public Builder() {
    	      // Empty
        }

        public Builder(JobStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.completedIndexes = defaults.completedIndexes;
    	      this.completionTime = defaults.completionTime;
    	      this.conditions = defaults.conditions;
    	      this.failed = defaults.failed;
    	      this.startTime = defaults.startTime;
    	      this.succeeded = defaults.succeeded;
        }

        public Builder setActive(@Nullable Integer active) {
            this.active = active;
            return this;
        }

        public Builder setCompletedIndexes(@Nullable String completedIndexes) {
            this.completedIndexes = completedIndexes;
            return this;
        }

        public Builder setCompletionTime(@Nullable String completionTime) {
            this.completionTime = completionTime;
            return this;
        }

        public Builder setConditions(@Nullable List<io.pulumi.kubernetes.batch.v1.outputs.JobCondition> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setFailed(@Nullable Integer failed) {
            this.failed = failed;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setSucceeded(@Nullable Integer succeeded) {
            this.succeeded = succeeded;
            return this;
        }

        public JobStatus build() {
            return new JobStatus(active, completedIndexes, completionTime, conditions, failed, startTime, succeeded);
        }
    }
}
