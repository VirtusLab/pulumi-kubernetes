// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class ContainerState {
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning running;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated terminated;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting waiting;

    @OutputCustomType.Constructor({"running","terminated","waiting"})
    private ContainerState(
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning running,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated terminated,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting waiting) {
        this.running = running;
        this.terminated = terminated;
        this.waiting = waiting;
    }

    public Optional<io.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning> getRunning() {
        return Optional.ofNullable(this.running);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated> getTerminated() {
        return Optional.ofNullable(this.terminated);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting> getWaiting() {
        return Optional.ofNullable(this.waiting);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning running;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated terminated;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting waiting;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.running = defaults.running;
    	      this.terminated = defaults.terminated;
    	      this.waiting = defaults.waiting;
        }

        public Builder setRunning(@Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning running) {
            this.running = running;
            return this;
        }

        public Builder setTerminated(@Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated terminated) {
            this.terminated = terminated;
            return this;
        }

        public Builder setWaiting(@Nullable io.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting waiting) {
            this.waiting = waiting;
            return this;
        }

        public ContainerState build() {
            return new ContainerState(running, terminated, waiting);
        }
    }
}
