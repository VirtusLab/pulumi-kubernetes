// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class Volume {
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFileVolumeSource azureFile;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSVolumeSource cephfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderVolumeSource cinder;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapVolumeSource configMap;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIVolumeSource csi;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIVolumeSource downwardAPI;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.EmptyDirVolumeSource emptyDir;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.EphemeralVolumeSource ephemeral;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexVolumeSource flexVolume;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.GitRepoVolumeSource gitRepo;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsVolumeSource glusterfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIVolumeSource iscsi;
    private final String name;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.PersistentVolumeClaimVolumeSource persistentVolumeClaim;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ProjectedVolumeSource projected;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDVolumeSource rbd;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOVolumeSource scaleIO;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretVolumeSource secret;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSVolumeSource storageos;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume;

    @OutputCustomType.Constructor({"awsElasticBlockStore","azureDisk","azureFile","cephfs","cinder","configMap","csi","downwardAPI","emptyDir","ephemeral","fc","flexVolume","flocker","gcePersistentDisk","gitRepo","glusterfs","hostPath","iscsi","name","nfs","persistentVolumeClaim","photonPersistentDisk","portworxVolume","projected","quobyte","rbd","scaleIO","secret","storageos","vsphereVolume"})
    private Volume(
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFileVolumeSource azureFile,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSVolumeSource cephfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderVolumeSource cinder,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapVolumeSource configMap,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIVolumeSource csi,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIVolumeSource downwardAPI,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.EmptyDirVolumeSource emptyDir,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.EphemeralVolumeSource ephemeral,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexVolumeSource flexVolume,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.GitRepoVolumeSource gitRepo,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsVolumeSource glusterfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIVolumeSource iscsi,
        String name,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.PersistentVolumeClaimVolumeSource persistentVolumeClaim,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ProjectedVolumeSource projected,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDVolumeSource rbd,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOVolumeSource scaleIO,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretVolumeSource secret,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSVolumeSource storageos,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume) {
        this.awsElasticBlockStore = awsElasticBlockStore;
        this.azureDisk = azureDisk;
        this.azureFile = azureFile;
        this.cephfs = cephfs;
        this.cinder = cinder;
        this.configMap = configMap;
        this.csi = csi;
        this.downwardAPI = downwardAPI;
        this.emptyDir = emptyDir;
        this.ephemeral = ephemeral;
        this.fc = fc;
        this.flexVolume = flexVolume;
        this.flocker = flocker;
        this.gcePersistentDisk = gcePersistentDisk;
        this.gitRepo = gitRepo;
        this.glusterfs = glusterfs;
        this.hostPath = hostPath;
        this.iscsi = iscsi;
        this.name = Objects.requireNonNull(name);
        this.nfs = nfs;
        this.persistentVolumeClaim = persistentVolumeClaim;
        this.photonPersistentDisk = photonPersistentDisk;
        this.portworxVolume = portworxVolume;
        this.projected = projected;
        this.quobyte = quobyte;
        this.rbd = rbd;
        this.scaleIO = scaleIO;
        this.secret = secret;
        this.storageos = storageos;
        this.vsphereVolume = vsphereVolume;
    }

    public Optional<io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource> getAwsElasticBlockStore() {
        return Optional.ofNullable(this.awsElasticBlockStore);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource> getAzureDisk() {
        return Optional.ofNullable(this.azureDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.AzureFileVolumeSource> getAzureFile() {
        return Optional.ofNullable(this.azureFile);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CephFSVolumeSource> getCephfs() {
        return Optional.ofNullable(this.cephfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CinderVolumeSource> getCinder() {
        return Optional.ofNullable(this.cinder);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ConfigMapVolumeSource> getConfigMap() {
        return Optional.ofNullable(this.configMap);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CSIVolumeSource> getCsi() {
        return Optional.ofNullable(this.csi);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.DownwardAPIVolumeSource> getDownwardAPI() {
        return Optional.ofNullable(this.downwardAPI);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.EmptyDirVolumeSource> getEmptyDir() {
        return Optional.ofNullable(this.emptyDir);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.EphemeralVolumeSource> getEphemeral() {
        return Optional.ofNullable(this.ephemeral);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource> getFc() {
        return Optional.ofNullable(this.fc);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FlexVolumeSource> getFlexVolume() {
        return Optional.ofNullable(this.flexVolume);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource> getFlocker() {
        return Optional.ofNullable(this.flocker);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource> getGcePersistentDisk() {
        return Optional.ofNullable(this.gcePersistentDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.GitRepoVolumeSource> getGitRepo() {
        return Optional.ofNullable(this.gitRepo);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.GlusterfsVolumeSource> getGlusterfs() {
        return Optional.ofNullable(this.glusterfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource> getHostPath() {
        return Optional.ofNullable(this.hostPath);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ISCSIVolumeSource> getIscsi() {
        return Optional.ofNullable(this.iscsi);
    }
    public String getName() {
        return this.name;
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource> getNfs() {
        return Optional.ofNullable(this.nfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.PersistentVolumeClaimVolumeSource> getPersistentVolumeClaim() {
        return Optional.ofNullable(this.persistentVolumeClaim);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource> getPhotonPersistentDisk() {
        return Optional.ofNullable(this.photonPersistentDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource> getPortworxVolume() {
        return Optional.ofNullable(this.portworxVolume);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ProjectedVolumeSource> getProjected() {
        return Optional.ofNullable(this.projected);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource> getQuobyte() {
        return Optional.ofNullable(this.quobyte);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.RBDVolumeSource> getRbd() {
        return Optional.ofNullable(this.rbd);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ScaleIOVolumeSource> getScaleIO() {
        return Optional.ofNullable(this.scaleIO);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.SecretVolumeSource> getSecret() {
        return Optional.ofNullable(this.secret);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.StorageOSVolumeSource> getStorageos() {
        return Optional.ofNullable(this.storageos);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource> getVsphereVolume() {
        return Optional.ofNullable(this.vsphereVolume);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Volume defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFileVolumeSource azureFile;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSVolumeSource cephfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderVolumeSource cinder;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapVolumeSource configMap;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIVolumeSource csi;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIVolumeSource downwardAPI;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.EmptyDirVolumeSource emptyDir;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.EphemeralVolumeSource ephemeral;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexVolumeSource flexVolume;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.GitRepoVolumeSource gitRepo;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsVolumeSource glusterfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIVolumeSource iscsi;
        private String name;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.PersistentVolumeClaimVolumeSource persistentVolumeClaim;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ProjectedVolumeSource projected;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDVolumeSource rbd;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOVolumeSource scaleIO;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretVolumeSource secret;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSVolumeSource storageos;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume;

        public Builder() {
    	      // Empty
        }

        public Builder(Volume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsElasticBlockStore = defaults.awsElasticBlockStore;
    	      this.azureDisk = defaults.azureDisk;
    	      this.azureFile = defaults.azureFile;
    	      this.cephfs = defaults.cephfs;
    	      this.cinder = defaults.cinder;
    	      this.configMap = defaults.configMap;
    	      this.csi = defaults.csi;
    	      this.downwardAPI = defaults.downwardAPI;
    	      this.emptyDir = defaults.emptyDir;
    	      this.ephemeral = defaults.ephemeral;
    	      this.fc = defaults.fc;
    	      this.flexVolume = defaults.flexVolume;
    	      this.flocker = defaults.flocker;
    	      this.gcePersistentDisk = defaults.gcePersistentDisk;
    	      this.gitRepo = defaults.gitRepo;
    	      this.glusterfs = defaults.glusterfs;
    	      this.hostPath = defaults.hostPath;
    	      this.iscsi = defaults.iscsi;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.persistentVolumeClaim = defaults.persistentVolumeClaim;
    	      this.photonPersistentDisk = defaults.photonPersistentDisk;
    	      this.portworxVolume = defaults.portworxVolume;
    	      this.projected = defaults.projected;
    	      this.quobyte = defaults.quobyte;
    	      this.rbd = defaults.rbd;
    	      this.scaleIO = defaults.scaleIO;
    	      this.secret = defaults.secret;
    	      this.storageos = defaults.storageos;
    	      this.vsphereVolume = defaults.vsphereVolume;
        }

        public Builder setAwsElasticBlockStore(@Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore) {
            this.awsElasticBlockStore = awsElasticBlockStore;
            return this;
        }

        public Builder setAzureDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk) {
            this.azureDisk = azureDisk;
            return this;
        }

        public Builder setAzureFile(@Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFileVolumeSource azureFile) {
            this.azureFile = azureFile;
            return this;
        }

        public Builder setCephfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSVolumeSource cephfs) {
            this.cephfs = cephfs;
            return this;
        }

        public Builder setCinder(@Nullable io.pulumi.kubernetes.core.v1.outputs.CinderVolumeSource cinder) {
            this.cinder = cinder;
            return this;
        }

        public Builder setConfigMap(@Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapVolumeSource configMap) {
            this.configMap = configMap;
            return this;
        }

        public Builder setCsi(@Nullable io.pulumi.kubernetes.core.v1.outputs.CSIVolumeSource csi) {
            this.csi = csi;
            return this;
        }

        public Builder setDownwardAPI(@Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIVolumeSource downwardAPI) {
            this.downwardAPI = downwardAPI;
            return this;
        }

        public Builder setEmptyDir(@Nullable io.pulumi.kubernetes.core.v1.outputs.EmptyDirVolumeSource emptyDir) {
            this.emptyDir = emptyDir;
            return this;
        }

        public Builder setEphemeral(@Nullable io.pulumi.kubernetes.core.v1.outputs.EphemeralVolumeSource ephemeral) {
            this.ephemeral = ephemeral;
            return this;
        }

        public Builder setFc(@Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc) {
            this.fc = fc;
            return this;
        }

        public Builder setFlexVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.FlexVolumeSource flexVolume) {
            this.flexVolume = flexVolume;
            return this;
        }

        public Builder setFlocker(@Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker) {
            this.flocker = flocker;
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk) {
            this.gcePersistentDisk = gcePersistentDisk;
            return this;
        }

        public Builder setGitRepo(@Nullable io.pulumi.kubernetes.core.v1.outputs.GitRepoVolumeSource gitRepo) {
            this.gitRepo = gitRepo;
            return this;
        }

        public Builder setGlusterfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsVolumeSource glusterfs) {
            this.glusterfs = glusterfs;
            return this;
        }

        public Builder setHostPath(@Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath) {
            this.hostPath = hostPath;
            return this;
        }

        public Builder setIscsi(@Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIVolumeSource iscsi) {
            this.iscsi = iscsi;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs) {
            this.nfs = nfs;
            return this;
        }

        public Builder setPersistentVolumeClaim(@Nullable io.pulumi.kubernetes.core.v1.outputs.PersistentVolumeClaimVolumeSource persistentVolumeClaim) {
            this.persistentVolumeClaim = persistentVolumeClaim;
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk) {
            this.photonPersistentDisk = photonPersistentDisk;
            return this;
        }

        public Builder setPortworxVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume) {
            this.portworxVolume = portworxVolume;
            return this;
        }

        public Builder setProjected(@Nullable io.pulumi.kubernetes.core.v1.outputs.ProjectedVolumeSource projected) {
            this.projected = projected;
            return this;
        }

        public Builder setQuobyte(@Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte) {
            this.quobyte = quobyte;
            return this;
        }

        public Builder setRbd(@Nullable io.pulumi.kubernetes.core.v1.outputs.RBDVolumeSource rbd) {
            this.rbd = rbd;
            return this;
        }

        public Builder setScaleIO(@Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOVolumeSource scaleIO) {
            this.scaleIO = scaleIO;
            return this;
        }

        public Builder setSecret(@Nullable io.pulumi.kubernetes.core.v1.outputs.SecretVolumeSource secret) {
            this.secret = secret;
            return this;
        }

        public Builder setStorageos(@Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSVolumeSource storageos) {
            this.storageos = storageos;
            return this;
        }

        public Builder setVsphereVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume) {
            this.vsphereVolume = vsphereVolume;
            return this;
        }

        public Volume build() {
            return new Volume(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
        }
    }
}
