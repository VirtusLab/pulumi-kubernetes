// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.networking.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class NetworkPolicySpec {
    private final @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyEgressRule> egress;
    private final @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyIngressRule> ingress;
    private final io.pulumi.kubernetes.meta.v1.outputs.LabelSelector podSelector;
    private final @Nullable List<String> policyTypes;

    @OutputCustomType.Constructor({"egress","ingress","podSelector","policyTypes"})
    private NetworkPolicySpec(
        @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyEgressRule> egress,
        @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyIngressRule> ingress,
        io.pulumi.kubernetes.meta.v1.outputs.LabelSelector podSelector,
        @Nullable List<String> policyTypes) {
        this.egress = egress;
        this.ingress = ingress;
        this.podSelector = Objects.requireNonNull(podSelector);
        this.policyTypes = policyTypes;
    }

    public List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyEgressRule> getEgress() {
        return this.egress == null ? List.of() : this.egress;
    }
    public List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyIngressRule> getIngress() {
        return this.ingress == null ? List.of() : this.ingress;
    }
    public io.pulumi.kubernetes.meta.v1.outputs.LabelSelector getPodSelector() {
        return this.podSelector;
    }
    public List<String> getPolicyTypes() {
        return this.policyTypes == null ? List.of() : this.policyTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkPolicySpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyEgressRule> egress;
        private @Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyIngressRule> ingress;
        private io.pulumi.kubernetes.meta.v1.outputs.LabelSelector podSelector;
        private @Nullable List<String> policyTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkPolicySpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.egress = defaults.egress;
    	      this.ingress = defaults.ingress;
    	      this.podSelector = defaults.podSelector;
    	      this.policyTypes = defaults.policyTypes;
        }

        public Builder setEgress(@Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyEgressRule> egress) {
            this.egress = egress;
            return this;
        }

        public Builder setIngress(@Nullable List<io.pulumi.kubernetes.networking.v1.outputs.NetworkPolicyIngressRule> ingress) {
            this.ingress = ingress;
            return this;
        }

        public Builder setPodSelector(io.pulumi.kubernetes.meta.v1.outputs.LabelSelector podSelector) {
            this.podSelector = Objects.requireNonNull(podSelector);
            return this;
        }

        public Builder setPolicyTypes(@Nullable List<String> policyTypes) {
            this.policyTypes = policyTypes;
            return this;
        }

        public NetworkPolicySpec build() {
            return new NetworkPolicySpec(egress, ingress, podSelector, policyTypes);
        }
    }
}
