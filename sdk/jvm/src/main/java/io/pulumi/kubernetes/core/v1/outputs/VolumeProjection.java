// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class VolumeProjection {
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapProjection configMap;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIProjection downwardAPI;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretProjection secret;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ServiceAccountTokenProjection serviceAccountToken;

    @OutputCustomType.Constructor({"configMap","downwardAPI","secret","serviceAccountToken"})
    private VolumeProjection(
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapProjection configMap,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIProjection downwardAPI,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretProjection secret,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ServiceAccountTokenProjection serviceAccountToken) {
        this.configMap = configMap;
        this.downwardAPI = downwardAPI;
        this.secret = secret;
        this.serviceAccountToken = serviceAccountToken;
    }

    public Optional<io.pulumi.kubernetes.core.v1.outputs.ConfigMapProjection> getConfigMap() {
        return Optional.ofNullable(this.configMap);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.DownwardAPIProjection> getDownwardAPI() {
        return Optional.ofNullable(this.downwardAPI);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.SecretProjection> getSecret() {
        return Optional.ofNullable(this.secret);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ServiceAccountTokenProjection> getServiceAccountToken() {
        return Optional.ofNullable(this.serviceAccountToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeProjection defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapProjection configMap;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIProjection downwardAPI;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.SecretProjection secret;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ServiceAccountTokenProjection serviceAccountToken;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeProjection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configMap = defaults.configMap;
    	      this.downwardAPI = defaults.downwardAPI;
    	      this.secret = defaults.secret;
    	      this.serviceAccountToken = defaults.serviceAccountToken;
        }

        public Builder setConfigMap(@Nullable io.pulumi.kubernetes.core.v1.outputs.ConfigMapProjection configMap) {
            this.configMap = configMap;
            return this;
        }

        public Builder setDownwardAPI(@Nullable io.pulumi.kubernetes.core.v1.outputs.DownwardAPIProjection downwardAPI) {
            this.downwardAPI = downwardAPI;
            return this;
        }

        public Builder setSecret(@Nullable io.pulumi.kubernetes.core.v1.outputs.SecretProjection secret) {
            this.secret = secret;
            return this;
        }

        public Builder setServiceAccountToken(@Nullable io.pulumi.kubernetes.core.v1.outputs.ServiceAccountTokenProjection serviceAccountToken) {
            this.serviceAccountToken = serviceAccountToken;
            return this;
        }

        public VolumeProjection build() {
            return new VolumeProjection(configMap, downwardAPI, secret, serviceAccountToken);
        }
    }
}
