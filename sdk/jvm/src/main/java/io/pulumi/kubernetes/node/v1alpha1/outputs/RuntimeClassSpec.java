// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.node.v1alpha1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class RuntimeClassSpec {
    private final @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Overhead overhead;
    private final String runtimeHandler;
    private final @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Scheduling scheduling;

    @OutputCustomType.Constructor({"overhead","runtimeHandler","scheduling"})
    private RuntimeClassSpec(
        @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Overhead overhead,
        String runtimeHandler,
        @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Scheduling scheduling) {
        this.overhead = overhead;
        this.runtimeHandler = Objects.requireNonNull(runtimeHandler);
        this.scheduling = scheduling;
    }

    public Optional<io.pulumi.kubernetes.node.v1alpha1.outputs.Overhead> getOverhead() {
        return Optional.ofNullable(this.overhead);
    }
    public String getRuntimeHandler() {
        return this.runtimeHandler;
    }
    public Optional<io.pulumi.kubernetes.node.v1alpha1.outputs.Scheduling> getScheduling() {
        return Optional.ofNullable(this.scheduling);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuntimeClassSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Overhead overhead;
        private String runtimeHandler;
        private @Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Scheduling scheduling;

        public Builder() {
    	      // Empty
        }

        public Builder(RuntimeClassSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.overhead = defaults.overhead;
    	      this.runtimeHandler = defaults.runtimeHandler;
    	      this.scheduling = defaults.scheduling;
        }

        public Builder setOverhead(@Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Overhead overhead) {
            this.overhead = overhead;
            return this;
        }

        public Builder setRuntimeHandler(String runtimeHandler) {
            this.runtimeHandler = Objects.requireNonNull(runtimeHandler);
            return this;
        }

        public Builder setScheduling(@Nullable io.pulumi.kubernetes.node.v1alpha1.outputs.Scheduling scheduling) {
            this.scheduling = scheduling;
            return this;
        }

        public RuntimeClassSpec build() {
            return new RuntimeClassSpec(overhead, runtimeHandler, scheduling);
        }
    }
}
