// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class NodeSelectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final NodeSelectorArgs Empty = new NodeSelectorArgs();

    @InputImport(name="nodeSelectorTerms", required=true)
    private final Input<List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs>> nodeSelectorTerms;

    public Input<List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs>> getNodeSelectorTerms() {
        return this.nodeSelectorTerms;
    }

    public NodeSelectorArgs(Input<List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs>> nodeSelectorTerms) {
        this.nodeSelectorTerms = Objects.requireNonNull(nodeSelectorTerms, "expected parameter 'nodeSelectorTerms' to be non-null");
    }

    private NodeSelectorArgs() {
        this.nodeSelectorTerms = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeSelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs>> nodeSelectorTerms;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeSelectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeSelectorTerms = defaults.nodeSelectorTerms;
        }

        public Builder setNodeSelectorTerms(Input<List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs>> nodeSelectorTerms) {
            this.nodeSelectorTerms = Objects.requireNonNull(nodeSelectorTerms);
            return this;
        }

        public Builder setNodeSelectorTerms(List<io.pulumi.kubernetes.core.v1.inputs.NodeSelectorTermArgs> nodeSelectorTerms) {
            this.nodeSelectorTerms = Input.of(Objects.requireNonNull(nodeSelectorTerms));
            return this;
        }

        public NodeSelectorArgs build() {
            return new NodeSelectorArgs(nodeSelectorTerms);
        }
    }
}
