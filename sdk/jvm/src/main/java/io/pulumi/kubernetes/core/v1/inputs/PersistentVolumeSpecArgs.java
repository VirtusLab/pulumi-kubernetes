// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class PersistentVolumeSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final PersistentVolumeSpecArgs Empty = new PersistentVolumeSpecArgs();

    @InputImport(name="accessModes")
    private final @Nullable Input<List<String>> accessModes;

    public Input<List<String>> getAccessModes() {
        return this.accessModes == null ? Input.empty() : this.accessModes;
    }

    @InputImport(name="awsElasticBlockStore")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> getAwsElasticBlockStore() {
        return this.awsElasticBlockStore == null ? Input.empty() : this.awsElasticBlockStore;
    }

    @InputImport(name="azureDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> getAzureDisk() {
        return this.azureDisk == null ? Input.empty() : this.azureDisk;
    }

    @InputImport(name="azureFile")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs> azureFile;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs> getAzureFile() {
        return this.azureFile == null ? Input.empty() : this.azureFile;
    }

    @InputImport(name="capacity")
    private final @Nullable Input<Map<String,String>> capacity;

    public Input<Map<String,String>> getCapacity() {
        return this.capacity == null ? Input.empty() : this.capacity;
    }

    @InputImport(name="cephfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs> cephfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs> getCephfs() {
        return this.cephfs == null ? Input.empty() : this.cephfs;
    }

    @InputImport(name="cinder")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs> cinder;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs> getCinder() {
        return this.cinder == null ? Input.empty() : this.cinder;
    }

    @InputImport(name="claimRef")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs> claimRef;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs> getClaimRef() {
        return this.claimRef == null ? Input.empty() : this.claimRef;
    }

    @InputImport(name="csi")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs> csi;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs> getCsi() {
        return this.csi == null ? Input.empty() : this.csi;
    }

    @InputImport(name="fc")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> getFc() {
        return this.fc == null ? Input.empty() : this.fc;
    }

    @InputImport(name="flexVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs> flexVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs> getFlexVolume() {
        return this.flexVolume == null ? Input.empty() : this.flexVolume;
    }

    @InputImport(name="flocker")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> getFlocker() {
        return this.flocker == null ? Input.empty() : this.flocker;
    }

    @InputImport(name="gcePersistentDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> getGcePersistentDisk() {
        return this.gcePersistentDisk == null ? Input.empty() : this.gcePersistentDisk;
    }

    @InputImport(name="glusterfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs> glusterfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs> getGlusterfs() {
        return this.glusterfs == null ? Input.empty() : this.glusterfs;
    }

    @InputImport(name="hostPath")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath;

    public Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> getHostPath() {
        return this.hostPath == null ? Input.empty() : this.hostPath;
    }

    @InputImport(name="iscsi")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs> iscsi;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs> getIscsi() {
        return this.iscsi == null ? Input.empty() : this.iscsi;
    }

    @InputImport(name="local")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs> local;

    public Input<io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs> getLocal() {
        return this.local == null ? Input.empty() : this.local;
    }

    @InputImport(name="mountOptions")
    private final @Nullable Input<List<String>> mountOptions;

    public Input<List<String>> getMountOptions() {
        return this.mountOptions == null ? Input.empty() : this.mountOptions;
    }

    @InputImport(name="nfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> getNfs() {
        return this.nfs == null ? Input.empty() : this.nfs;
    }

    @InputImport(name="nodeAffinity")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs> nodeAffinity;

    public Input<io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs> getNodeAffinity() {
        return this.nodeAffinity == null ? Input.empty() : this.nodeAffinity;
    }

    @InputImport(name="persistentVolumeReclaimPolicy")
    private final @Nullable Input<String> persistentVolumeReclaimPolicy;

    public Input<String> getPersistentVolumeReclaimPolicy() {
        return this.persistentVolumeReclaimPolicy == null ? Input.empty() : this.persistentVolumeReclaimPolicy;
    }

    @InputImport(name="photonPersistentDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> getPhotonPersistentDisk() {
        return this.photonPersistentDisk == null ? Input.empty() : this.photonPersistentDisk;
    }

    @InputImport(name="portworxVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> getPortworxVolume() {
        return this.portworxVolume == null ? Input.empty() : this.portworxVolume;
    }

    @InputImport(name="quobyte")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte;

    public Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> getQuobyte() {
        return this.quobyte == null ? Input.empty() : this.quobyte;
    }

    @InputImport(name="rbd")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs> rbd;

    public Input<io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs> getRbd() {
        return this.rbd == null ? Input.empty() : this.rbd;
    }

    @InputImport(name="scaleIO")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs> scaleIO;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs> getScaleIO() {
        return this.scaleIO == null ? Input.empty() : this.scaleIO;
    }

    @InputImport(name="storageClassName")
    private final @Nullable Input<String> storageClassName;

    public Input<String> getStorageClassName() {
        return this.storageClassName == null ? Input.empty() : this.storageClassName;
    }

    @InputImport(name="storageos")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs> storageos;

    public Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs> getStorageos() {
        return this.storageos == null ? Input.empty() : this.storageos;
    }

    @InputImport(name="volumeMode")
    private final @Nullable Input<String> volumeMode;

    public Input<String> getVolumeMode() {
        return this.volumeMode == null ? Input.empty() : this.volumeMode;
    }

    @InputImport(name="vsphereVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> getVsphereVolume() {
        return this.vsphereVolume == null ? Input.empty() : this.vsphereVolume;
    }

    public PersistentVolumeSpecArgs(
        @Nullable Input<List<String>> accessModes,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs> azureFile,
        @Nullable Input<Map<String,String>> capacity,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs> cephfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs> cinder,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs> claimRef,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs> csi,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs> flexVolume,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs> glusterfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs> iscsi,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs> local,
        @Nullable Input<List<String>> mountOptions,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs> nodeAffinity,
        @Nullable Input<String> persistentVolumeReclaimPolicy,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs> rbd,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs> scaleIO,
        @Nullable Input<String> storageClassName,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs> storageos,
        @Nullable Input<String> volumeMode,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume) {
        this.accessModes = accessModes;
        this.awsElasticBlockStore = awsElasticBlockStore;
        this.azureDisk = azureDisk;
        this.azureFile = azureFile;
        this.capacity = capacity;
        this.cephfs = cephfs;
        this.cinder = cinder;
        this.claimRef = claimRef;
        this.csi = csi;
        this.fc = fc;
        this.flexVolume = flexVolume;
        this.flocker = flocker;
        this.gcePersistentDisk = gcePersistentDisk;
        this.glusterfs = glusterfs;
        this.hostPath = hostPath;
        this.iscsi = iscsi;
        this.local = local;
        this.mountOptions = mountOptions;
        this.nfs = nfs;
        this.nodeAffinity = nodeAffinity;
        this.persistentVolumeReclaimPolicy = persistentVolumeReclaimPolicy;
        this.photonPersistentDisk = photonPersistentDisk;
        this.portworxVolume = portworxVolume;
        this.quobyte = quobyte;
        this.rbd = rbd;
        this.scaleIO = scaleIO;
        this.storageClassName = storageClassName;
        this.storageos = storageos;
        this.volumeMode = volumeMode;
        this.vsphereVolume = vsphereVolume;
    }

    private PersistentVolumeSpecArgs() {
        this.accessModes = Input.empty();
        this.awsElasticBlockStore = Input.empty();
        this.azureDisk = Input.empty();
        this.azureFile = Input.empty();
        this.capacity = Input.empty();
        this.cephfs = Input.empty();
        this.cinder = Input.empty();
        this.claimRef = Input.empty();
        this.csi = Input.empty();
        this.fc = Input.empty();
        this.flexVolume = Input.empty();
        this.flocker = Input.empty();
        this.gcePersistentDisk = Input.empty();
        this.glusterfs = Input.empty();
        this.hostPath = Input.empty();
        this.iscsi = Input.empty();
        this.local = Input.empty();
        this.mountOptions = Input.empty();
        this.nfs = Input.empty();
        this.nodeAffinity = Input.empty();
        this.persistentVolumeReclaimPolicy = Input.empty();
        this.photonPersistentDisk = Input.empty();
        this.portworxVolume = Input.empty();
        this.quobyte = Input.empty();
        this.rbd = Input.empty();
        this.scaleIO = Input.empty();
        this.storageClassName = Input.empty();
        this.storageos = Input.empty();
        this.volumeMode = Input.empty();
        this.vsphereVolume = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PersistentVolumeSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> accessModes;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs> azureFile;
        private @Nullable Input<Map<String,String>> capacity;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs> cephfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs> cinder;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs> claimRef;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs> csi;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs> flexVolume;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs> glusterfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs> iscsi;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs> local;
        private @Nullable Input<List<String>> mountOptions;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs> nodeAffinity;
        private @Nullable Input<String> persistentVolumeReclaimPolicy;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs> rbd;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs> scaleIO;
        private @Nullable Input<String> storageClassName;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs> storageos;
        private @Nullable Input<String> volumeMode;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume;

        public Builder() {
    	      // Empty
        }

        public Builder(PersistentVolumeSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessModes = defaults.accessModes;
    	      this.awsElasticBlockStore = defaults.awsElasticBlockStore;
    	      this.azureDisk = defaults.azureDisk;
    	      this.azureFile = defaults.azureFile;
    	      this.capacity = defaults.capacity;
    	      this.cephfs = defaults.cephfs;
    	      this.cinder = defaults.cinder;
    	      this.claimRef = defaults.claimRef;
    	      this.csi = defaults.csi;
    	      this.fc = defaults.fc;
    	      this.flexVolume = defaults.flexVolume;
    	      this.flocker = defaults.flocker;
    	      this.gcePersistentDisk = defaults.gcePersistentDisk;
    	      this.glusterfs = defaults.glusterfs;
    	      this.hostPath = defaults.hostPath;
    	      this.iscsi = defaults.iscsi;
    	      this.local = defaults.local;
    	      this.mountOptions = defaults.mountOptions;
    	      this.nfs = defaults.nfs;
    	      this.nodeAffinity = defaults.nodeAffinity;
    	      this.persistentVolumeReclaimPolicy = defaults.persistentVolumeReclaimPolicy;
    	      this.photonPersistentDisk = defaults.photonPersistentDisk;
    	      this.portworxVolume = defaults.portworxVolume;
    	      this.quobyte = defaults.quobyte;
    	      this.rbd = defaults.rbd;
    	      this.scaleIO = defaults.scaleIO;
    	      this.storageClassName = defaults.storageClassName;
    	      this.storageos = defaults.storageos;
    	      this.volumeMode = defaults.volumeMode;
    	      this.vsphereVolume = defaults.vsphereVolume;
        }

        public Builder setAccessModes(@Nullable Input<List<String>> accessModes) {
            this.accessModes = accessModes;
            return this;
        }

        public Builder setAccessModes(@Nullable List<String> accessModes) {
            this.accessModes = Input.ofNullable(accessModes);
            return this;
        }

        public Builder setAwsElasticBlockStore(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore) {
            this.awsElasticBlockStore = awsElasticBlockStore;
            return this;
        }

        public Builder setAwsElasticBlockStore(@Nullable io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs awsElasticBlockStore) {
            this.awsElasticBlockStore = Input.ofNullable(awsElasticBlockStore);
            return this;
        }

        public Builder setAzureDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk) {
            this.azureDisk = azureDisk;
            return this;
        }

        public Builder setAzureDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs azureDisk) {
            this.azureDisk = Input.ofNullable(azureDisk);
            return this;
        }

        public Builder setAzureFile(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs> azureFile) {
            this.azureFile = azureFile;
            return this;
        }

        public Builder setAzureFile(@Nullable io.pulumi.kubernetes.core.v1.inputs.AzureFilePersistentVolumeSourceArgs azureFile) {
            this.azureFile = Input.ofNullable(azureFile);
            return this;
        }

        public Builder setCapacity(@Nullable Input<Map<String,String>> capacity) {
            this.capacity = capacity;
            return this;
        }

        public Builder setCapacity(@Nullable Map<String,String> capacity) {
            this.capacity = Input.ofNullable(capacity);
            return this;
        }

        public Builder setCephfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs> cephfs) {
            this.cephfs = cephfs;
            return this;
        }

        public Builder setCephfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.CephFSPersistentVolumeSourceArgs cephfs) {
            this.cephfs = Input.ofNullable(cephfs);
            return this;
        }

        public Builder setCinder(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs> cinder) {
            this.cinder = cinder;
            return this;
        }

        public Builder setCinder(@Nullable io.pulumi.kubernetes.core.v1.inputs.CinderPersistentVolumeSourceArgs cinder) {
            this.cinder = Input.ofNullable(cinder);
            return this;
        }

        public Builder setClaimRef(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs> claimRef) {
            this.claimRef = claimRef;
            return this;
        }

        public Builder setClaimRef(@Nullable io.pulumi.kubernetes.core.v1.inputs.ObjectReferenceArgs claimRef) {
            this.claimRef = Input.ofNullable(claimRef);
            return this;
        }

        public Builder setCsi(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs> csi) {
            this.csi = csi;
            return this;
        }

        public Builder setCsi(@Nullable io.pulumi.kubernetes.core.v1.inputs.CSIPersistentVolumeSourceArgs csi) {
            this.csi = Input.ofNullable(csi);
            return this;
        }

        public Builder setFc(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc) {
            this.fc = fc;
            return this;
        }

        public Builder setFc(@Nullable io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs fc) {
            this.fc = Input.ofNullable(fc);
            return this;
        }

        public Builder setFlexVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs> flexVolume) {
            this.flexVolume = flexVolume;
            return this;
        }

        public Builder setFlexVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.FlexPersistentVolumeSourceArgs flexVolume) {
            this.flexVolume = Input.ofNullable(flexVolume);
            return this;
        }

        public Builder setFlocker(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker) {
            this.flocker = flocker;
            return this;
        }

        public Builder setFlocker(@Nullable io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs flocker) {
            this.flocker = Input.ofNullable(flocker);
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk) {
            this.gcePersistentDisk = gcePersistentDisk;
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs gcePersistentDisk) {
            this.gcePersistentDisk = Input.ofNullable(gcePersistentDisk);
            return this;
        }

        public Builder setGlusterfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs> glusterfs) {
            this.glusterfs = glusterfs;
            return this;
        }

        public Builder setGlusterfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.GlusterfsPersistentVolumeSourceArgs glusterfs) {
            this.glusterfs = Input.ofNullable(glusterfs);
            return this;
        }

        public Builder setHostPath(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath) {
            this.hostPath = hostPath;
            return this;
        }

        public Builder setHostPath(@Nullable io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs hostPath) {
            this.hostPath = Input.ofNullable(hostPath);
            return this;
        }

        public Builder setIscsi(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs> iscsi) {
            this.iscsi = iscsi;
            return this;
        }

        public Builder setIscsi(@Nullable io.pulumi.kubernetes.core.v1.inputs.ISCSIPersistentVolumeSourceArgs iscsi) {
            this.iscsi = Input.ofNullable(iscsi);
            return this;
        }

        public Builder setLocal(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs> local) {
            this.local = local;
            return this;
        }

        public Builder setLocal(@Nullable io.pulumi.kubernetes.core.v1.inputs.LocalVolumeSourceArgs local) {
            this.local = Input.ofNullable(local);
            return this;
        }

        public Builder setMountOptions(@Nullable Input<List<String>> mountOptions) {
            this.mountOptions = mountOptions;
            return this;
        }

        public Builder setMountOptions(@Nullable List<String> mountOptions) {
            this.mountOptions = Input.ofNullable(mountOptions);
            return this;
        }

        public Builder setNfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs) {
            this.nfs = nfs;
            return this;
        }

        public Builder setNfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs nfs) {
            this.nfs = Input.ofNullable(nfs);
            return this;
        }

        public Builder setNodeAffinity(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs> nodeAffinity) {
            this.nodeAffinity = nodeAffinity;
            return this;
        }

        public Builder setNodeAffinity(@Nullable io.pulumi.kubernetes.core.v1.inputs.VolumeNodeAffinityArgs nodeAffinity) {
            this.nodeAffinity = Input.ofNullable(nodeAffinity);
            return this;
        }

        public Builder setPersistentVolumeReclaimPolicy(@Nullable Input<String> persistentVolumeReclaimPolicy) {
            this.persistentVolumeReclaimPolicy = persistentVolumeReclaimPolicy;
            return this;
        }

        public Builder setPersistentVolumeReclaimPolicy(@Nullable String persistentVolumeReclaimPolicy) {
            this.persistentVolumeReclaimPolicy = Input.ofNullable(persistentVolumeReclaimPolicy);
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk) {
            this.photonPersistentDisk = photonPersistentDisk;
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs photonPersistentDisk) {
            this.photonPersistentDisk = Input.ofNullable(photonPersistentDisk);
            return this;
        }

        public Builder setPortworxVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume) {
            this.portworxVolume = portworxVolume;
            return this;
        }

        public Builder setPortworxVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs portworxVolume) {
            this.portworxVolume = Input.ofNullable(portworxVolume);
            return this;
        }

        public Builder setQuobyte(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte) {
            this.quobyte = quobyte;
            return this;
        }

        public Builder setQuobyte(@Nullable io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs quobyte) {
            this.quobyte = Input.ofNullable(quobyte);
            return this;
        }

        public Builder setRbd(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs> rbd) {
            this.rbd = rbd;
            return this;
        }

        public Builder setRbd(@Nullable io.pulumi.kubernetes.core.v1.inputs.RBDPersistentVolumeSourceArgs rbd) {
            this.rbd = Input.ofNullable(rbd);
            return this;
        }

        public Builder setScaleIO(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs> scaleIO) {
            this.scaleIO = scaleIO;
            return this;
        }

        public Builder setScaleIO(@Nullable io.pulumi.kubernetes.core.v1.inputs.ScaleIOPersistentVolumeSourceArgs scaleIO) {
            this.scaleIO = Input.ofNullable(scaleIO);
            return this;
        }

        public Builder setStorageClassName(@Nullable Input<String> storageClassName) {
            this.storageClassName = storageClassName;
            return this;
        }

        public Builder setStorageClassName(@Nullable String storageClassName) {
            this.storageClassName = Input.ofNullable(storageClassName);
            return this;
        }

        public Builder setStorageos(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs> storageos) {
            this.storageos = storageos;
            return this;
        }

        public Builder setStorageos(@Nullable io.pulumi.kubernetes.core.v1.inputs.StorageOSPersistentVolumeSourceArgs storageos) {
            this.storageos = Input.ofNullable(storageos);
            return this;
        }

        public Builder setVolumeMode(@Nullable Input<String> volumeMode) {
            this.volumeMode = volumeMode;
            return this;
        }

        public Builder setVolumeMode(@Nullable String volumeMode) {
            this.volumeMode = Input.ofNullable(volumeMode);
            return this;
        }

        public Builder setVsphereVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume) {
            this.vsphereVolume = vsphereVolume;
            return this;
        }

        public Builder setVsphereVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs vsphereVolume) {
            this.vsphereVolume = Input.ofNullable(vsphereVolume);
            return this;
        }

        public PersistentVolumeSpecArgs build() {
            return new PersistentVolumeSpecArgs(accessModes, awsElasticBlockStore, azureDisk, azureFile, capacity, cephfs, cinder, claimRef, csi, fc, flexVolume, flocker, gcePersistentDisk, glusterfs, hostPath, iscsi, local, mountOptions, nfs, nodeAffinity, persistentVolumeReclaimPolicy, photonPersistentDisk, portworxVolume, quobyte, rbd, scaleIO, storageClassName, storageos, volumeMode, vsphereVolume);
        }
    }
}
