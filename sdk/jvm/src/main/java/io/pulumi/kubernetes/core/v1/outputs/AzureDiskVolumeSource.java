// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class AzureDiskVolumeSource {
    private final @Nullable String cachingMode;
    private final String diskName;
    private final String diskURI;
    private final @Nullable String fsType;
    private final @Nullable String kind;
    private final @Nullable Boolean readOnly;

    @OutputCustomType.Constructor({"cachingMode","diskName","diskURI","fsType","kind","readOnly"})
    private AzureDiskVolumeSource(
        @Nullable String cachingMode,
        String diskName,
        String diskURI,
        @Nullable String fsType,
        @Nullable String kind,
        @Nullable Boolean readOnly) {
        this.cachingMode = cachingMode;
        this.diskName = Objects.requireNonNull(diskName);
        this.diskURI = Objects.requireNonNull(diskURI);
        this.fsType = fsType;
        this.kind = kind;
        this.readOnly = readOnly;
    }

    public Optional<String> getCachingMode() {
        return Optional.ofNullable(this.cachingMode);
    }
    public String getDiskName() {
        return this.diskName;
    }
    public String getDiskURI() {
        return this.diskURI;
    }
    public Optional<String> getFsType() {
        return Optional.ofNullable(this.fsType);
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public Optional<Boolean> getReadOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureDiskVolumeSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cachingMode;
        private String diskName;
        private String diskURI;
        private @Nullable String fsType;
        private @Nullable String kind;
        private @Nullable Boolean readOnly;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureDiskVolumeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cachingMode = defaults.cachingMode;
    	      this.diskName = defaults.diskName;
    	      this.diskURI = defaults.diskURI;
    	      this.fsType = defaults.fsType;
    	      this.kind = defaults.kind;
    	      this.readOnly = defaults.readOnly;
        }

        public Builder setCachingMode(@Nullable String cachingMode) {
            this.cachingMode = cachingMode;
            return this;
        }

        public Builder setDiskName(String diskName) {
            this.diskName = Objects.requireNonNull(diskName);
            return this;
        }

        public Builder setDiskURI(String diskURI) {
            this.diskURI = Objects.requireNonNull(diskURI);
            return this;
        }

        public Builder setFsType(@Nullable String fsType) {
            this.fsType = fsType;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setReadOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        public AzureDiskVolumeSource build() {
            return new AzureDiskVolumeSource(cachingMode, diskName, diskURI, fsType, kind, readOnly);
        }
    }
}
