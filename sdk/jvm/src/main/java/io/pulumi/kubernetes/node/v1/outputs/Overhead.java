// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.node.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class Overhead {
    private final @Nullable Map<String,String> podFixed;

    @OutputCustomType.Constructor({"podFixed"})
    private Overhead(@Nullable Map<String,String> podFixed) {
        this.podFixed = podFixed;
    }

    public Map<String,String> getPodFixed() {
        return this.podFixed == null ? Map.of() : this.podFixed;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Overhead defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,String> podFixed;

        public Builder() {
    	      // Empty
        }

        public Builder(Overhead defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.podFixed = defaults.podFixed;
        }

        public Builder setPodFixed(@Nullable Map<String,String> podFixed) {
            this.podFixed = podFixed;
            return this;
        }

        public Overhead build() {
            return new Overhead(podFixed);
        }
    }
}
