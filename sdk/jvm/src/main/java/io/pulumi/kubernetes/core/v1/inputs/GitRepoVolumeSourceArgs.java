// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class GitRepoVolumeSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final GitRepoVolumeSourceArgs Empty = new GitRepoVolumeSourceArgs();

    @InputImport(name="directory")
    private final @Nullable Input<String> directory;

    public Input<String> getDirectory() {
        return this.directory == null ? Input.empty() : this.directory;
    }

    @InputImport(name="repository", required=true)
    private final Input<String> repository;

    public Input<String> getRepository() {
        return this.repository;
    }

    @InputImport(name="revision")
    private final @Nullable Input<String> revision;

    public Input<String> getRevision() {
        return this.revision == null ? Input.empty() : this.revision;
    }

    public GitRepoVolumeSourceArgs(
        @Nullable Input<String> directory,
        Input<String> repository,
        @Nullable Input<String> revision) {
        this.directory = directory;
        this.repository = Objects.requireNonNull(repository, "expected parameter 'repository' to be non-null");
        this.revision = revision;
    }

    private GitRepoVolumeSourceArgs() {
        this.directory = Input.empty();
        this.repository = Input.empty();
        this.revision = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitRepoVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> directory;
        private Input<String> repository;
        private @Nullable Input<String> revision;

        public Builder() {
    	      // Empty
        }

        public Builder(GitRepoVolumeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directory = defaults.directory;
    	      this.repository = defaults.repository;
    	      this.revision = defaults.revision;
        }

        public Builder setDirectory(@Nullable Input<String> directory) {
            this.directory = directory;
            return this;
        }

        public Builder setDirectory(@Nullable String directory) {
            this.directory = Input.ofNullable(directory);
            return this;
        }

        public Builder setRepository(Input<String> repository) {
            this.repository = Objects.requireNonNull(repository);
            return this;
        }

        public Builder setRepository(String repository) {
            this.repository = Input.of(Objects.requireNonNull(repository));
            return this;
        }

        public Builder setRevision(@Nullable Input<String> revision) {
            this.revision = revision;
            return this;
        }

        public Builder setRevision(@Nullable String revision) {
            this.revision = Input.ofNullable(revision);
            return this;
        }

        public GitRepoVolumeSourceArgs build() {
            return new GitRepoVolumeSourceArgs(directory, repository, revision);
        }
    }
}
