// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.settings.v1alpha1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class PodPresetSpecArgs extends io.pulumi.resources.ResourceArgs {

    public static final PodPresetSpecArgs Empty = new PodPresetSpecArgs();

    @InputImport(name="env")
    private final @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs>> env;

    public Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs>> getEnv() {
        return this.env == null ? Input.empty() : this.env;
    }

    @InputImport(name="envFrom")
    private final @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs>> envFrom;

    public Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs>> getEnvFrom() {
        return this.envFrom == null ? Input.empty() : this.envFrom;
    }

    @InputImport(name="selector")
    private final @Nullable Input<io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs> selector;

    public Input<io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs> getSelector() {
        return this.selector == null ? Input.empty() : this.selector;
    }

    @InputImport(name="volumeMounts")
    private final @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs>> volumeMounts;

    public Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs>> getVolumeMounts() {
        return this.volumeMounts == null ? Input.empty() : this.volumeMounts;
    }

    @InputImport(name="volumes")
    private final @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs>> volumes;

    public Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs>> getVolumes() {
        return this.volumes == null ? Input.empty() : this.volumes;
    }

    public PodPresetSpecArgs(
        @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs>> env,
        @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs>> envFrom,
        @Nullable Input<io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs> selector,
        @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs>> volumeMounts,
        @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs>> volumes) {
        this.env = env;
        this.envFrom = envFrom;
        this.selector = selector;
        this.volumeMounts = volumeMounts;
        this.volumes = volumes;
    }

    private PodPresetSpecArgs() {
        this.env = Input.empty();
        this.envFrom = Input.empty();
        this.selector = Input.empty();
        this.volumeMounts = Input.empty();
        this.volumes = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodPresetSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs>> env;
        private @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs>> envFrom;
        private @Nullable Input<io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs> selector;
        private @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs>> volumeMounts;
        private @Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs>> volumes;

        public Builder() {
    	      // Empty
        }

        public Builder(PodPresetSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.env = defaults.env;
    	      this.envFrom = defaults.envFrom;
    	      this.selector = defaults.selector;
    	      this.volumeMounts = defaults.volumeMounts;
    	      this.volumes = defaults.volumes;
        }

        public Builder setEnv(@Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs>> env) {
            this.env = env;
            return this;
        }

        public Builder setEnv(@Nullable List<io.pulumi.kubernetes.core.v1.inputs.EnvVarArgs> env) {
            this.env = Input.ofNullable(env);
            return this;
        }

        public Builder setEnvFrom(@Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs>> envFrom) {
            this.envFrom = envFrom;
            return this;
        }

        public Builder setEnvFrom(@Nullable List<io.pulumi.kubernetes.core.v1.inputs.EnvFromSourceArgs> envFrom) {
            this.envFrom = Input.ofNullable(envFrom);
            return this;
        }

        public Builder setSelector(@Nullable Input<io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs> selector) {
            this.selector = selector;
            return this;
        }

        public Builder setSelector(@Nullable io.pulumi.kubernetes.meta.v1.inputs.LabelSelectorArgs selector) {
            this.selector = Input.ofNullable(selector);
            return this;
        }

        public Builder setVolumeMounts(@Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs>> volumeMounts) {
            this.volumeMounts = volumeMounts;
            return this;
        }

        public Builder setVolumeMounts(@Nullable List<io.pulumi.kubernetes.core.v1.inputs.VolumeMountArgs> volumeMounts) {
            this.volumeMounts = Input.ofNullable(volumeMounts);
            return this;
        }

        public Builder setVolumes(@Nullable Input<List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs>> volumes) {
            this.volumes = volumes;
            return this;
        }

        public Builder setVolumes(@Nullable List<io.pulumi.kubernetes.core.v1.inputs.VolumeArgs> volumes) {
            this.volumes = Input.ofNullable(volumes);
            return this;
        }

        public PodPresetSpecArgs build() {
            return new PodPresetSpecArgs(env, envFrom, selector, volumeMounts, volumes);
        }
    }
}
