// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class PersistentVolumeSpec {
    private final @Nullable List<String> accessModes;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFilePersistentVolumeSource azureFile;
    private final @Nullable Map<String,String> capacity;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSPersistentVolumeSource cephfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderPersistentVolumeSource cinder;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ObjectReference claimRef;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIPersistentVolumeSource csi;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexPersistentVolumeSource flexVolume;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsPersistentVolumeSource glusterfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIPersistentVolumeSource iscsi;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.LocalVolumeSource local;
    private final @Nullable List<String> mountOptions;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.VolumeNodeAffinity nodeAffinity;
    private final @Nullable String persistentVolumeReclaimPolicy;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDPersistentVolumeSource rbd;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOPersistentVolumeSource scaleIO;
    private final @Nullable String storageClassName;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSPersistentVolumeSource storageos;
    private final @Nullable String volumeMode;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume;

    @OutputCustomType.Constructor({"accessModes","awsElasticBlockStore","azureDisk","azureFile","capacity","cephfs","cinder","claimRef","csi","fc","flexVolume","flocker","gcePersistentDisk","glusterfs","hostPath","iscsi","local","mountOptions","nfs","nodeAffinity","persistentVolumeReclaimPolicy","photonPersistentDisk","portworxVolume","quobyte","rbd","scaleIO","storageClassName","storageos","volumeMode","vsphereVolume"})
    private PersistentVolumeSpec(
        @Nullable List<String> accessModes,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFilePersistentVolumeSource azureFile,
        @Nullable Map<String,String> capacity,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSPersistentVolumeSource cephfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderPersistentVolumeSource cinder,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ObjectReference claimRef,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIPersistentVolumeSource csi,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexPersistentVolumeSource flexVolume,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsPersistentVolumeSource glusterfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIPersistentVolumeSource iscsi,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.LocalVolumeSource local,
        @Nullable List<String> mountOptions,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.VolumeNodeAffinity nodeAffinity,
        @Nullable String persistentVolumeReclaimPolicy,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDPersistentVolumeSource rbd,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOPersistentVolumeSource scaleIO,
        @Nullable String storageClassName,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSPersistentVolumeSource storageos,
        @Nullable String volumeMode,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume) {
        this.accessModes = accessModes;
        this.awsElasticBlockStore = awsElasticBlockStore;
        this.azureDisk = azureDisk;
        this.azureFile = azureFile;
        this.capacity = capacity;
        this.cephfs = cephfs;
        this.cinder = cinder;
        this.claimRef = claimRef;
        this.csi = csi;
        this.fc = fc;
        this.flexVolume = flexVolume;
        this.flocker = flocker;
        this.gcePersistentDisk = gcePersistentDisk;
        this.glusterfs = glusterfs;
        this.hostPath = hostPath;
        this.iscsi = iscsi;
        this.local = local;
        this.mountOptions = mountOptions;
        this.nfs = nfs;
        this.nodeAffinity = nodeAffinity;
        this.persistentVolumeReclaimPolicy = persistentVolumeReclaimPolicy;
        this.photonPersistentDisk = photonPersistentDisk;
        this.portworxVolume = portworxVolume;
        this.quobyte = quobyte;
        this.rbd = rbd;
        this.scaleIO = scaleIO;
        this.storageClassName = storageClassName;
        this.storageos = storageos;
        this.volumeMode = volumeMode;
        this.vsphereVolume = vsphereVolume;
    }

    public List<String> getAccessModes() {
        return this.accessModes == null ? List.of() : this.accessModes;
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource> getAwsElasticBlockStore() {
        return Optional.ofNullable(this.awsElasticBlockStore);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource> getAzureDisk() {
        return Optional.ofNullable(this.azureDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.AzureFilePersistentVolumeSource> getAzureFile() {
        return Optional.ofNullable(this.azureFile);
    }
    public Map<String,String> getCapacity() {
        return this.capacity == null ? Map.of() : this.capacity;
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CephFSPersistentVolumeSource> getCephfs() {
        return Optional.ofNullable(this.cephfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CinderPersistentVolumeSource> getCinder() {
        return Optional.ofNullable(this.cinder);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ObjectReference> getClaimRef() {
        return Optional.ofNullable(this.claimRef);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.CSIPersistentVolumeSource> getCsi() {
        return Optional.ofNullable(this.csi);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource> getFc() {
        return Optional.ofNullable(this.fc);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FlexPersistentVolumeSource> getFlexVolume() {
        return Optional.ofNullable(this.flexVolume);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource> getFlocker() {
        return Optional.ofNullable(this.flocker);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource> getGcePersistentDisk() {
        return Optional.ofNullable(this.gcePersistentDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.GlusterfsPersistentVolumeSource> getGlusterfs() {
        return Optional.ofNullable(this.glusterfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource> getHostPath() {
        return Optional.ofNullable(this.hostPath);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ISCSIPersistentVolumeSource> getIscsi() {
        return Optional.ofNullable(this.iscsi);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.LocalVolumeSource> getLocal() {
        return Optional.ofNullable(this.local);
    }
    public List<String> getMountOptions() {
        return this.mountOptions == null ? List.of() : this.mountOptions;
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource> getNfs() {
        return Optional.ofNullable(this.nfs);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.VolumeNodeAffinity> getNodeAffinity() {
        return Optional.ofNullable(this.nodeAffinity);
    }
    public Optional<String> getPersistentVolumeReclaimPolicy() {
        return Optional.ofNullable(this.persistentVolumeReclaimPolicy);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource> getPhotonPersistentDisk() {
        return Optional.ofNullable(this.photonPersistentDisk);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource> getPortworxVolume() {
        return Optional.ofNullable(this.portworxVolume);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource> getQuobyte() {
        return Optional.ofNullable(this.quobyte);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.RBDPersistentVolumeSource> getRbd() {
        return Optional.ofNullable(this.rbd);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ScaleIOPersistentVolumeSource> getScaleIO() {
        return Optional.ofNullable(this.scaleIO);
    }
    public Optional<String> getStorageClassName() {
        return Optional.ofNullable(this.storageClassName);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.StorageOSPersistentVolumeSource> getStorageos() {
        return Optional.ofNullable(this.storageos);
    }
    public Optional<String> getVolumeMode() {
        return Optional.ofNullable(this.volumeMode);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource> getVsphereVolume() {
        return Optional.ofNullable(this.vsphereVolume);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PersistentVolumeSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> accessModes;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFilePersistentVolumeSource azureFile;
        private @Nullable Map<String,String> capacity;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSPersistentVolumeSource cephfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CinderPersistentVolumeSource cinder;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ObjectReference claimRef;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.CSIPersistentVolumeSource csi;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FlexPersistentVolumeSource flexVolume;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsPersistentVolumeSource glusterfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIPersistentVolumeSource iscsi;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.LocalVolumeSource local;
        private @Nullable List<String> mountOptions;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.VolumeNodeAffinity nodeAffinity;
        private @Nullable String persistentVolumeReclaimPolicy;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.RBDPersistentVolumeSource rbd;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOPersistentVolumeSource scaleIO;
        private @Nullable String storageClassName;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSPersistentVolumeSource storageos;
        private @Nullable String volumeMode;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume;

        public Builder() {
    	      // Empty
        }

        public Builder(PersistentVolumeSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessModes = defaults.accessModes;
    	      this.awsElasticBlockStore = defaults.awsElasticBlockStore;
    	      this.azureDisk = defaults.azureDisk;
    	      this.azureFile = defaults.azureFile;
    	      this.capacity = defaults.capacity;
    	      this.cephfs = defaults.cephfs;
    	      this.cinder = defaults.cinder;
    	      this.claimRef = defaults.claimRef;
    	      this.csi = defaults.csi;
    	      this.fc = defaults.fc;
    	      this.flexVolume = defaults.flexVolume;
    	      this.flocker = defaults.flocker;
    	      this.gcePersistentDisk = defaults.gcePersistentDisk;
    	      this.glusterfs = defaults.glusterfs;
    	      this.hostPath = defaults.hostPath;
    	      this.iscsi = defaults.iscsi;
    	      this.local = defaults.local;
    	      this.mountOptions = defaults.mountOptions;
    	      this.nfs = defaults.nfs;
    	      this.nodeAffinity = defaults.nodeAffinity;
    	      this.persistentVolumeReclaimPolicy = defaults.persistentVolumeReclaimPolicy;
    	      this.photonPersistentDisk = defaults.photonPersistentDisk;
    	      this.portworxVolume = defaults.portworxVolume;
    	      this.quobyte = defaults.quobyte;
    	      this.rbd = defaults.rbd;
    	      this.scaleIO = defaults.scaleIO;
    	      this.storageClassName = defaults.storageClassName;
    	      this.storageos = defaults.storageos;
    	      this.volumeMode = defaults.volumeMode;
    	      this.vsphereVolume = defaults.vsphereVolume;
        }

        public Builder setAccessModes(@Nullable List<String> accessModes) {
            this.accessModes = accessModes;
            return this;
        }

        public Builder setAwsElasticBlockStore(@Nullable io.pulumi.kubernetes.core.v1.outputs.AWSElasticBlockStoreVolumeSource awsElasticBlockStore) {
            this.awsElasticBlockStore = awsElasticBlockStore;
            return this;
        }

        public Builder setAzureDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.AzureDiskVolumeSource azureDisk) {
            this.azureDisk = azureDisk;
            return this;
        }

        public Builder setAzureFile(@Nullable io.pulumi.kubernetes.core.v1.outputs.AzureFilePersistentVolumeSource azureFile) {
            this.azureFile = azureFile;
            return this;
        }

        public Builder setCapacity(@Nullable Map<String,String> capacity) {
            this.capacity = capacity;
            return this;
        }

        public Builder setCephfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.CephFSPersistentVolumeSource cephfs) {
            this.cephfs = cephfs;
            return this;
        }

        public Builder setCinder(@Nullable io.pulumi.kubernetes.core.v1.outputs.CinderPersistentVolumeSource cinder) {
            this.cinder = cinder;
            return this;
        }

        public Builder setClaimRef(@Nullable io.pulumi.kubernetes.core.v1.outputs.ObjectReference claimRef) {
            this.claimRef = claimRef;
            return this;
        }

        public Builder setCsi(@Nullable io.pulumi.kubernetes.core.v1.outputs.CSIPersistentVolumeSource csi) {
            this.csi = csi;
            return this;
        }

        public Builder setFc(@Nullable io.pulumi.kubernetes.core.v1.outputs.FCVolumeSource fc) {
            this.fc = fc;
            return this;
        }

        public Builder setFlexVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.FlexPersistentVolumeSource flexVolume) {
            this.flexVolume = flexVolume;
            return this;
        }

        public Builder setFlocker(@Nullable io.pulumi.kubernetes.core.v1.outputs.FlockerVolumeSource flocker) {
            this.flocker = flocker;
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.GCEPersistentDiskVolumeSource gcePersistentDisk) {
            this.gcePersistentDisk = gcePersistentDisk;
            return this;
        }

        public Builder setGlusterfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.GlusterfsPersistentVolumeSource glusterfs) {
            this.glusterfs = glusterfs;
            return this;
        }

        public Builder setHostPath(@Nullable io.pulumi.kubernetes.core.v1.outputs.HostPathVolumeSource hostPath) {
            this.hostPath = hostPath;
            return this;
        }

        public Builder setIscsi(@Nullable io.pulumi.kubernetes.core.v1.outputs.ISCSIPersistentVolumeSource iscsi) {
            this.iscsi = iscsi;
            return this;
        }

        public Builder setLocal(@Nullable io.pulumi.kubernetes.core.v1.outputs.LocalVolumeSource local) {
            this.local = local;
            return this;
        }

        public Builder setMountOptions(@Nullable List<String> mountOptions) {
            this.mountOptions = mountOptions;
            return this;
        }

        public Builder setNfs(@Nullable io.pulumi.kubernetes.core.v1.outputs.NFSVolumeSource nfs) {
            this.nfs = nfs;
            return this;
        }

        public Builder setNodeAffinity(@Nullable io.pulumi.kubernetes.core.v1.outputs.VolumeNodeAffinity nodeAffinity) {
            this.nodeAffinity = nodeAffinity;
            return this;
        }

        public Builder setPersistentVolumeReclaimPolicy(@Nullable String persistentVolumeReclaimPolicy) {
            this.persistentVolumeReclaimPolicy = persistentVolumeReclaimPolicy;
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.outputs.PhotonPersistentDiskVolumeSource photonPersistentDisk) {
            this.photonPersistentDisk = photonPersistentDisk;
            return this;
        }

        public Builder setPortworxVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.PortworxVolumeSource portworxVolume) {
            this.portworxVolume = portworxVolume;
            return this;
        }

        public Builder setQuobyte(@Nullable io.pulumi.kubernetes.core.v1.outputs.QuobyteVolumeSource quobyte) {
            this.quobyte = quobyte;
            return this;
        }

        public Builder setRbd(@Nullable io.pulumi.kubernetes.core.v1.outputs.RBDPersistentVolumeSource rbd) {
            this.rbd = rbd;
            return this;
        }

        public Builder setScaleIO(@Nullable io.pulumi.kubernetes.core.v1.outputs.ScaleIOPersistentVolumeSource scaleIO) {
            this.scaleIO = scaleIO;
            return this;
        }

        public Builder setStorageClassName(@Nullable String storageClassName) {
            this.storageClassName = storageClassName;
            return this;
        }

        public Builder setStorageos(@Nullable io.pulumi.kubernetes.core.v1.outputs.StorageOSPersistentVolumeSource storageos) {
            this.storageos = storageos;
            return this;
        }

        public Builder setVolumeMode(@Nullable String volumeMode) {
            this.volumeMode = volumeMode;
            return this;
        }

        public Builder setVsphereVolume(@Nullable io.pulumi.kubernetes.core.v1.outputs.VsphereVirtualDiskVolumeSource vsphereVolume) {
            this.vsphereVolume = vsphereVolume;
            return this;
        }

        public PersistentVolumeSpec build() {
            return new PersistentVolumeSpec(accessModes, awsElasticBlockStore, azureDisk, azureFile, capacity, cephfs, cinder, claimRef, csi, fc, flexVolume, flocker, gcePersistentDisk, glusterfs, hostPath, iscsi, local, mountOptions, nfs, nodeAffinity, persistentVolumeReclaimPolicy, photonPersistentDisk, portworxVolume, quobyte, rbd, scaleIO, storageClassName, storageos, volumeMode, vsphereVolume);
        }
    }
}
