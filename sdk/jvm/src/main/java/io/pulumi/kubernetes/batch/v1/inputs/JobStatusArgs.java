// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.batch.v1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class JobStatusArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobStatusArgs Empty = new JobStatusArgs();

    @InputImport(name="active")
    private final @Nullable Input<Integer> active;

    public Input<Integer> getActive() {
        return this.active == null ? Input.empty() : this.active;
    }

    @InputImport(name="completedIndexes")
    private final @Nullable Input<String> completedIndexes;

    public Input<String> getCompletedIndexes() {
        return this.completedIndexes == null ? Input.empty() : this.completedIndexes;
    }

    @InputImport(name="completionTime")
    private final @Nullable Input<String> completionTime;

    public Input<String> getCompletionTime() {
        return this.completionTime == null ? Input.empty() : this.completionTime;
    }

    @InputImport(name="conditions")
    private final @Nullable Input<List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs>> conditions;

    public Input<List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs>> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    @InputImport(name="failed")
    private final @Nullable Input<Integer> failed;

    public Input<Integer> getFailed() {
        return this.failed == null ? Input.empty() : this.failed;
    }

    @InputImport(name="startTime")
    private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    @InputImport(name="succeeded")
    private final @Nullable Input<Integer> succeeded;

    public Input<Integer> getSucceeded() {
        return this.succeeded == null ? Input.empty() : this.succeeded;
    }

    public JobStatusArgs(
        @Nullable Input<Integer> active,
        @Nullable Input<String> completedIndexes,
        @Nullable Input<String> completionTime,
        @Nullable Input<List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs>> conditions,
        @Nullable Input<Integer> failed,
        @Nullable Input<String> startTime,
        @Nullable Input<Integer> succeeded) {
        this.active = active;
        this.completedIndexes = completedIndexes;
        this.completionTime = completionTime;
        this.conditions = conditions;
        this.failed = failed;
        this.startTime = startTime;
        this.succeeded = succeeded;
    }

    private JobStatusArgs() {
        this.active = Input.empty();
        this.completedIndexes = Input.empty();
        this.completionTime = Input.empty();
        this.conditions = Input.empty();
        this.failed = Input.empty();
        this.startTime = Input.empty();
        this.succeeded = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> active;
        private @Nullable Input<String> completedIndexes;
        private @Nullable Input<String> completionTime;
        private @Nullable Input<List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs>> conditions;
        private @Nullable Input<Integer> failed;
        private @Nullable Input<String> startTime;
        private @Nullable Input<Integer> succeeded;

        public Builder() {
    	      // Empty
        }

        public Builder(JobStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.completedIndexes = defaults.completedIndexes;
    	      this.completionTime = defaults.completionTime;
    	      this.conditions = defaults.conditions;
    	      this.failed = defaults.failed;
    	      this.startTime = defaults.startTime;
    	      this.succeeded = defaults.succeeded;
        }

        public Builder setActive(@Nullable Input<Integer> active) {
            this.active = active;
            return this;
        }

        public Builder setActive(@Nullable Integer active) {
            this.active = Input.ofNullable(active);
            return this;
        }

        public Builder setCompletedIndexes(@Nullable Input<String> completedIndexes) {
            this.completedIndexes = completedIndexes;
            return this;
        }

        public Builder setCompletedIndexes(@Nullable String completedIndexes) {
            this.completedIndexes = Input.ofNullable(completedIndexes);
            return this;
        }

        public Builder setCompletionTime(@Nullable Input<String> completionTime) {
            this.completionTime = completionTime;
            return this;
        }

        public Builder setCompletionTime(@Nullable String completionTime) {
            this.completionTime = Input.ofNullable(completionTime);
            return this;
        }

        public Builder setConditions(@Nullable Input<List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable List<io.pulumi.kubernetes.batch.v1.inputs.JobConditionArgs> conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public Builder setFailed(@Nullable Input<Integer> failed) {
            this.failed = failed;
            return this;
        }

        public Builder setFailed(@Nullable Integer failed) {
            this.failed = Input.ofNullable(failed);
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }

        public Builder setSucceeded(@Nullable Input<Integer> succeeded) {
            this.succeeded = succeeded;
            return this;
        }

        public Builder setSucceeded(@Nullable Integer succeeded) {
            this.succeeded = Input.ofNullable(succeeded);
            return this;
        }

        public JobStatusArgs build() {
            return new JobStatusArgs(active, completedIndexes, completionTime, conditions, failed, startTime, succeeded);
        }
    }
}
