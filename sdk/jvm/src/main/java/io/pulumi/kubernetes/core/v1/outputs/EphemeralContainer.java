// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.outputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;

@OutputCustomType
public final class EphemeralContainer {
    private final @Nullable List<String> args;
    private final @Nullable List<String> command;
    private final @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvVar> env;
    private final @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvFromSource> envFrom;
    private final @Nullable String image;
    private final @Nullable String imagePullPolicy;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.Lifecycle lifecycle;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe livenessProbe;
    private final String name;
    private final @Nullable List<io.pulumi.kubernetes.core.v1.outputs.ContainerPort> ports;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe readinessProbe;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.ResourceRequirements resources;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.SecurityContext securityContext;
    private final @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe startupProbe;
    private final @Nullable Boolean stdin;
    private final @Nullable Boolean stdinOnce;
    private final @Nullable String targetContainerName;
    private final @Nullable String terminationMessagePath;
    private final @Nullable String terminationMessagePolicy;
    private final @Nullable Boolean tty;
    private final @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeDevice> volumeDevices;
    private final @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeMount> volumeMounts;
    private final @Nullable String workingDir;

    @OutputCustomType.Constructor({"args","command","env","envFrom","image","imagePullPolicy","lifecycle","livenessProbe","name","ports","readinessProbe","resources","securityContext","startupProbe","stdin","stdinOnce","targetContainerName","terminationMessagePath","terminationMessagePolicy","tty","volumeDevices","volumeMounts","workingDir"})
    private EphemeralContainer(
        @Nullable List<String> args,
        @Nullable List<String> command,
        @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvVar> env,
        @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvFromSource> envFrom,
        @Nullable String image,
        @Nullable String imagePullPolicy,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.Lifecycle lifecycle,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe livenessProbe,
        String name,
        @Nullable List<io.pulumi.kubernetes.core.v1.outputs.ContainerPort> ports,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe readinessProbe,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.ResourceRequirements resources,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.SecurityContext securityContext,
        @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe startupProbe,
        @Nullable Boolean stdin,
        @Nullable Boolean stdinOnce,
        @Nullable String targetContainerName,
        @Nullable String terminationMessagePath,
        @Nullable String terminationMessagePolicy,
        @Nullable Boolean tty,
        @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeDevice> volumeDevices,
        @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeMount> volumeMounts,
        @Nullable String workingDir) {
        this.args = args;
        this.command = command;
        this.env = env;
        this.envFrom = envFrom;
        this.image = image;
        this.imagePullPolicy = imagePullPolicy;
        this.lifecycle = lifecycle;
        this.livenessProbe = livenessProbe;
        this.name = Objects.requireNonNull(name);
        this.ports = ports;
        this.readinessProbe = readinessProbe;
        this.resources = resources;
        this.securityContext = securityContext;
        this.startupProbe = startupProbe;
        this.stdin = stdin;
        this.stdinOnce = stdinOnce;
        this.targetContainerName = targetContainerName;
        this.terminationMessagePath = terminationMessagePath;
        this.terminationMessagePolicy = terminationMessagePolicy;
        this.tty = tty;
        this.volumeDevices = volumeDevices;
        this.volumeMounts = volumeMounts;
        this.workingDir = workingDir;
    }

    public List<String> getArgs() {
        return this.args == null ? List.of() : this.args;
    }
    public List<String> getCommand() {
        return this.command == null ? List.of() : this.command;
    }
    public List<io.pulumi.kubernetes.core.v1.outputs.EnvVar> getEnv() {
        return this.env == null ? List.of() : this.env;
    }
    public List<io.pulumi.kubernetes.core.v1.outputs.EnvFromSource> getEnvFrom() {
        return this.envFrom == null ? List.of() : this.envFrom;
    }
    public Optional<String> getImage() {
        return Optional.ofNullable(this.image);
    }
    public Optional<String> getImagePullPolicy() {
        return Optional.ofNullable(this.imagePullPolicy);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.Lifecycle> getLifecycle() {
        return Optional.ofNullable(this.lifecycle);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.Probe> getLivenessProbe() {
        return Optional.ofNullable(this.livenessProbe);
    }
    public String getName() {
        return this.name;
    }
    public List<io.pulumi.kubernetes.core.v1.outputs.ContainerPort> getPorts() {
        return this.ports == null ? List.of() : this.ports;
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.Probe> getReadinessProbe() {
        return Optional.ofNullable(this.readinessProbe);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.ResourceRequirements> getResources() {
        return Optional.ofNullable(this.resources);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.SecurityContext> getSecurityContext() {
        return Optional.ofNullable(this.securityContext);
    }
    public Optional<io.pulumi.kubernetes.core.v1.outputs.Probe> getStartupProbe() {
        return Optional.ofNullable(this.startupProbe);
    }
    public Optional<Boolean> getStdin() {
        return Optional.ofNullable(this.stdin);
    }
    public Optional<Boolean> getStdinOnce() {
        return Optional.ofNullable(this.stdinOnce);
    }
    public Optional<String> getTargetContainerName() {
        return Optional.ofNullable(this.targetContainerName);
    }
    public Optional<String> getTerminationMessagePath() {
        return Optional.ofNullable(this.terminationMessagePath);
    }
    public Optional<String> getTerminationMessagePolicy() {
        return Optional.ofNullable(this.terminationMessagePolicy);
    }
    public Optional<Boolean> getTty() {
        return Optional.ofNullable(this.tty);
    }
    public List<io.pulumi.kubernetes.core.v1.outputs.VolumeDevice> getVolumeDevices() {
        return this.volumeDevices == null ? List.of() : this.volumeDevices;
    }
    public List<io.pulumi.kubernetes.core.v1.outputs.VolumeMount> getVolumeMounts() {
        return this.volumeMounts == null ? List.of() : this.volumeMounts;
    }
    public Optional<String> getWorkingDir() {
        return Optional.ofNullable(this.workingDir);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EphemeralContainer defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> args;
        private @Nullable List<String> command;
        private @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvVar> env;
        private @Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvFromSource> envFrom;
        private @Nullable String image;
        private @Nullable String imagePullPolicy;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.Lifecycle lifecycle;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe livenessProbe;
        private String name;
        private @Nullable List<io.pulumi.kubernetes.core.v1.outputs.ContainerPort> ports;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe readinessProbe;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.ResourceRequirements resources;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.SecurityContext securityContext;
        private @Nullable io.pulumi.kubernetes.core.v1.outputs.Probe startupProbe;
        private @Nullable Boolean stdin;
        private @Nullable Boolean stdinOnce;
        private @Nullable String targetContainerName;
        private @Nullable String terminationMessagePath;
        private @Nullable String terminationMessagePolicy;
        private @Nullable Boolean tty;
        private @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeDevice> volumeDevices;
        private @Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeMount> volumeMounts;
        private @Nullable String workingDir;

        public Builder() {
    	      // Empty
        }

        public Builder(EphemeralContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.command = defaults.command;
    	      this.env = defaults.env;
    	      this.envFrom = defaults.envFrom;
    	      this.image = defaults.image;
    	      this.imagePullPolicy = defaults.imagePullPolicy;
    	      this.lifecycle = defaults.lifecycle;
    	      this.livenessProbe = defaults.livenessProbe;
    	      this.name = defaults.name;
    	      this.ports = defaults.ports;
    	      this.readinessProbe = defaults.readinessProbe;
    	      this.resources = defaults.resources;
    	      this.securityContext = defaults.securityContext;
    	      this.startupProbe = defaults.startupProbe;
    	      this.stdin = defaults.stdin;
    	      this.stdinOnce = defaults.stdinOnce;
    	      this.targetContainerName = defaults.targetContainerName;
    	      this.terminationMessagePath = defaults.terminationMessagePath;
    	      this.terminationMessagePolicy = defaults.terminationMessagePolicy;
    	      this.tty = defaults.tty;
    	      this.volumeDevices = defaults.volumeDevices;
    	      this.volumeMounts = defaults.volumeMounts;
    	      this.workingDir = defaults.workingDir;
        }

        public Builder setArgs(@Nullable List<String> args) {
            this.args = args;
            return this;
        }

        public Builder setCommand(@Nullable List<String> command) {
            this.command = command;
            return this;
        }

        public Builder setEnv(@Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvVar> env) {
            this.env = env;
            return this;
        }

        public Builder setEnvFrom(@Nullable List<io.pulumi.kubernetes.core.v1.outputs.EnvFromSource> envFrom) {
            this.envFrom = envFrom;
            return this;
        }

        public Builder setImage(@Nullable String image) {
            this.image = image;
            return this;
        }

        public Builder setImagePullPolicy(@Nullable String imagePullPolicy) {
            this.imagePullPolicy = imagePullPolicy;
            return this;
        }

        public Builder setLifecycle(@Nullable io.pulumi.kubernetes.core.v1.outputs.Lifecycle lifecycle) {
            this.lifecycle = lifecycle;
            return this;
        }

        public Builder setLivenessProbe(@Nullable io.pulumi.kubernetes.core.v1.outputs.Probe livenessProbe) {
            this.livenessProbe = livenessProbe;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPorts(@Nullable List<io.pulumi.kubernetes.core.v1.outputs.ContainerPort> ports) {
            this.ports = ports;
            return this;
        }

        public Builder setReadinessProbe(@Nullable io.pulumi.kubernetes.core.v1.outputs.Probe readinessProbe) {
            this.readinessProbe = readinessProbe;
            return this;
        }

        public Builder setResources(@Nullable io.pulumi.kubernetes.core.v1.outputs.ResourceRequirements resources) {
            this.resources = resources;
            return this;
        }

        public Builder setSecurityContext(@Nullable io.pulumi.kubernetes.core.v1.outputs.SecurityContext securityContext) {
            this.securityContext = securityContext;
            return this;
        }

        public Builder setStartupProbe(@Nullable io.pulumi.kubernetes.core.v1.outputs.Probe startupProbe) {
            this.startupProbe = startupProbe;
            return this;
        }

        public Builder setStdin(@Nullable Boolean stdin) {
            this.stdin = stdin;
            return this;
        }

        public Builder setStdinOnce(@Nullable Boolean stdinOnce) {
            this.stdinOnce = stdinOnce;
            return this;
        }

        public Builder setTargetContainerName(@Nullable String targetContainerName) {
            this.targetContainerName = targetContainerName;
            return this;
        }

        public Builder setTerminationMessagePath(@Nullable String terminationMessagePath) {
            this.terminationMessagePath = terminationMessagePath;
            return this;
        }

        public Builder setTerminationMessagePolicy(@Nullable String terminationMessagePolicy) {
            this.terminationMessagePolicy = terminationMessagePolicy;
            return this;
        }

        public Builder setTty(@Nullable Boolean tty) {
            this.tty = tty;
            return this;
        }

        public Builder setVolumeDevices(@Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeDevice> volumeDevices) {
            this.volumeDevices = volumeDevices;
            return this;
        }

        public Builder setVolumeMounts(@Nullable List<io.pulumi.kubernetes.core.v1.outputs.VolumeMount> volumeMounts) {
            this.volumeMounts = volumeMounts;
            return this;
        }

        public Builder setWorkingDir(@Nullable String workingDir) {
            this.workingDir = workingDir;
            return this;
        }

        public EphemeralContainer build() {
            return new EphemeralContainer(args, command, env, envFrom, image, imagePullPolicy, lifecycle, livenessProbe, name, ports, readinessProbe, resources, securityContext, startupProbe, stdin, stdinOnce, targetContainerName, terminationMessagePath, terminationMessagePolicy, tty, volumeDevices, volumeMounts, workingDir);
        }
    }
}
