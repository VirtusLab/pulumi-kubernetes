// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes.core.v1.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.kubernetes.Utilities;


public final class VolumeArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    @InputImport(name="awsElasticBlockStore")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> getAwsElasticBlockStore() {
        return this.awsElasticBlockStore == null ? Input.empty() : this.awsElasticBlockStore;
    }

    @InputImport(name="azureDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> getAzureDisk() {
        return this.azureDisk == null ? Input.empty() : this.azureDisk;
    }

    @InputImport(name="azureFile")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs> azureFile;

    public Input<io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs> getAzureFile() {
        return this.azureFile == null ? Input.empty() : this.azureFile;
    }

    @InputImport(name="cephfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs> cephfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs> getCephfs() {
        return this.cephfs == null ? Input.empty() : this.cephfs;
    }

    @InputImport(name="cinder")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs> cinder;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs> getCinder() {
        return this.cinder == null ? Input.empty() : this.cinder;
    }

    @InputImport(name="configMap")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs> configMap;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs> getConfigMap() {
        return this.configMap == null ? Input.empty() : this.configMap;
    }

    @InputImport(name="csi")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs> csi;

    public Input<io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs> getCsi() {
        return this.csi == null ? Input.empty() : this.csi;
    }

    @InputImport(name="downwardAPI")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs> downwardAPI;

    public Input<io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs> getDownwardAPI() {
        return this.downwardAPI == null ? Input.empty() : this.downwardAPI;
    }

    @InputImport(name="emptyDir")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs> emptyDir;

    public Input<io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs> getEmptyDir() {
        return this.emptyDir == null ? Input.empty() : this.emptyDir;
    }

    @InputImport(name="ephemeral")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs> ephemeral;

    public Input<io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs> getEphemeral() {
        return this.ephemeral == null ? Input.empty() : this.ephemeral;
    }

    @InputImport(name="fc")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> getFc() {
        return this.fc == null ? Input.empty() : this.fc;
    }

    @InputImport(name="flexVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs> flexVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs> getFlexVolume() {
        return this.flexVolume == null ? Input.empty() : this.flexVolume;
    }

    @InputImport(name="flocker")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker;

    public Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> getFlocker() {
        return this.flocker == null ? Input.empty() : this.flocker;
    }

    @InputImport(name="gcePersistentDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> getGcePersistentDisk() {
        return this.gcePersistentDisk == null ? Input.empty() : this.gcePersistentDisk;
    }

    @InputImport(name="gitRepo")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs> gitRepo;

    public Input<io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs> getGitRepo() {
        return this.gitRepo == null ? Input.empty() : this.gitRepo;
    }

    @InputImport(name="glusterfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs> glusterfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs> getGlusterfs() {
        return this.glusterfs == null ? Input.empty() : this.glusterfs;
    }

    @InputImport(name="hostPath")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath;

    public Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> getHostPath() {
        return this.hostPath == null ? Input.empty() : this.hostPath;
    }

    @InputImport(name="iscsi")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs> iscsi;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs> getIscsi() {
        return this.iscsi == null ? Input.empty() : this.iscsi;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="nfs")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs;

    public Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> getNfs() {
        return this.nfs == null ? Input.empty() : this.nfs;
    }

    @InputImport(name="persistentVolumeClaim")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs> persistentVolumeClaim;

    public Input<io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs> getPersistentVolumeClaim() {
        return this.persistentVolumeClaim == null ? Input.empty() : this.persistentVolumeClaim;
    }

    @InputImport(name="photonPersistentDisk")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk;

    public Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> getPhotonPersistentDisk() {
        return this.photonPersistentDisk == null ? Input.empty() : this.photonPersistentDisk;
    }

    @InputImport(name="portworxVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> getPortworxVolume() {
        return this.portworxVolume == null ? Input.empty() : this.portworxVolume;
    }

    @InputImport(name="projected")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs> projected;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs> getProjected() {
        return this.projected == null ? Input.empty() : this.projected;
    }

    @InputImport(name="quobyte")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte;

    public Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> getQuobyte() {
        return this.quobyte == null ? Input.empty() : this.quobyte;
    }

    @InputImport(name="rbd")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs> rbd;

    public Input<io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs> getRbd() {
        return this.rbd == null ? Input.empty() : this.rbd;
    }

    @InputImport(name="scaleIO")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs> scaleIO;

    public Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs> getScaleIO() {
        return this.scaleIO == null ? Input.empty() : this.scaleIO;
    }

    @InputImport(name="secret")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs> secret;

    public Input<io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs> getSecret() {
        return this.secret == null ? Input.empty() : this.secret;
    }

    @InputImport(name="storageos")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs> storageos;

    public Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs> getStorageos() {
        return this.storageos == null ? Input.empty() : this.storageos;
    }

    @InputImport(name="vsphereVolume")
    private final @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume;

    public Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> getVsphereVolume() {
        return this.vsphereVolume == null ? Input.empty() : this.vsphereVolume;
    }

    public VolumeArgs(
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs> azureFile,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs> cephfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs> cinder,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs> configMap,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs> csi,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs> downwardAPI,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs> emptyDir,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs> ephemeral,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs> flexVolume,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs> gitRepo,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs> glusterfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs> iscsi,
        Input<String> name,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs> persistentVolumeClaim,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs> projected,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs> rbd,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs> scaleIO,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs> secret,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs> storageos,
        @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume) {
        this.awsElasticBlockStore = awsElasticBlockStore;
        this.azureDisk = azureDisk;
        this.azureFile = azureFile;
        this.cephfs = cephfs;
        this.cinder = cinder;
        this.configMap = configMap;
        this.csi = csi;
        this.downwardAPI = downwardAPI;
        this.emptyDir = emptyDir;
        this.ephemeral = ephemeral;
        this.fc = fc;
        this.flexVolume = flexVolume;
        this.flocker = flocker;
        this.gcePersistentDisk = gcePersistentDisk;
        this.gitRepo = gitRepo;
        this.glusterfs = glusterfs;
        this.hostPath = hostPath;
        this.iscsi = iscsi;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.nfs = nfs;
        this.persistentVolumeClaim = persistentVolumeClaim;
        this.photonPersistentDisk = photonPersistentDisk;
        this.portworxVolume = portworxVolume;
        this.projected = projected;
        this.quobyte = quobyte;
        this.rbd = rbd;
        this.scaleIO = scaleIO;
        this.secret = secret;
        this.storageos = storageos;
        this.vsphereVolume = vsphereVolume;
    }

    private VolumeArgs() {
        this.awsElasticBlockStore = Input.empty();
        this.azureDisk = Input.empty();
        this.azureFile = Input.empty();
        this.cephfs = Input.empty();
        this.cinder = Input.empty();
        this.configMap = Input.empty();
        this.csi = Input.empty();
        this.downwardAPI = Input.empty();
        this.emptyDir = Input.empty();
        this.ephemeral = Input.empty();
        this.fc = Input.empty();
        this.flexVolume = Input.empty();
        this.flocker = Input.empty();
        this.gcePersistentDisk = Input.empty();
        this.gitRepo = Input.empty();
        this.glusterfs = Input.empty();
        this.hostPath = Input.empty();
        this.iscsi = Input.empty();
        this.name = Input.empty();
        this.nfs = Input.empty();
        this.persistentVolumeClaim = Input.empty();
        this.photonPersistentDisk = Input.empty();
        this.portworxVolume = Input.empty();
        this.projected = Input.empty();
        this.quobyte = Input.empty();
        this.rbd = Input.empty();
        this.scaleIO = Input.empty();
        this.secret = Input.empty();
        this.storageos = Input.empty();
        this.vsphereVolume = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs> azureFile;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs> cephfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs> cinder;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs> configMap;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs> csi;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs> downwardAPI;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs> emptyDir;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs> ephemeral;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs> flexVolume;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs> gitRepo;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs> glusterfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs> iscsi;
        private Input<String> name;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs> persistentVolumeClaim;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs> projected;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs> rbd;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs> scaleIO;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs> secret;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs> storageos;
        private @Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsElasticBlockStore = defaults.awsElasticBlockStore;
    	      this.azureDisk = defaults.azureDisk;
    	      this.azureFile = defaults.azureFile;
    	      this.cephfs = defaults.cephfs;
    	      this.cinder = defaults.cinder;
    	      this.configMap = defaults.configMap;
    	      this.csi = defaults.csi;
    	      this.downwardAPI = defaults.downwardAPI;
    	      this.emptyDir = defaults.emptyDir;
    	      this.ephemeral = defaults.ephemeral;
    	      this.fc = defaults.fc;
    	      this.flexVolume = defaults.flexVolume;
    	      this.flocker = defaults.flocker;
    	      this.gcePersistentDisk = defaults.gcePersistentDisk;
    	      this.gitRepo = defaults.gitRepo;
    	      this.glusterfs = defaults.glusterfs;
    	      this.hostPath = defaults.hostPath;
    	      this.iscsi = defaults.iscsi;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.persistentVolumeClaim = defaults.persistentVolumeClaim;
    	      this.photonPersistentDisk = defaults.photonPersistentDisk;
    	      this.portworxVolume = defaults.portworxVolume;
    	      this.projected = defaults.projected;
    	      this.quobyte = defaults.quobyte;
    	      this.rbd = defaults.rbd;
    	      this.scaleIO = defaults.scaleIO;
    	      this.secret = defaults.secret;
    	      this.storageos = defaults.storageos;
    	      this.vsphereVolume = defaults.vsphereVolume;
        }

        public Builder setAwsElasticBlockStore(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs> awsElasticBlockStore) {
            this.awsElasticBlockStore = awsElasticBlockStore;
            return this;
        }

        public Builder setAwsElasticBlockStore(@Nullable io.pulumi.kubernetes.core.v1.inputs.AWSElasticBlockStoreVolumeSourceArgs awsElasticBlockStore) {
            this.awsElasticBlockStore = Input.ofNullable(awsElasticBlockStore);
            return this;
        }

        public Builder setAzureDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs> azureDisk) {
            this.azureDisk = azureDisk;
            return this;
        }

        public Builder setAzureDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.AzureDiskVolumeSourceArgs azureDisk) {
            this.azureDisk = Input.ofNullable(azureDisk);
            return this;
        }

        public Builder setAzureFile(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs> azureFile) {
            this.azureFile = azureFile;
            return this;
        }

        public Builder setAzureFile(@Nullable io.pulumi.kubernetes.core.v1.inputs.AzureFileVolumeSourceArgs azureFile) {
            this.azureFile = Input.ofNullable(azureFile);
            return this;
        }

        public Builder setCephfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs> cephfs) {
            this.cephfs = cephfs;
            return this;
        }

        public Builder setCephfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.CephFSVolumeSourceArgs cephfs) {
            this.cephfs = Input.ofNullable(cephfs);
            return this;
        }

        public Builder setCinder(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs> cinder) {
            this.cinder = cinder;
            return this;
        }

        public Builder setCinder(@Nullable io.pulumi.kubernetes.core.v1.inputs.CinderVolumeSourceArgs cinder) {
            this.cinder = Input.ofNullable(cinder);
            return this;
        }

        public Builder setConfigMap(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs> configMap) {
            this.configMap = configMap;
            return this;
        }

        public Builder setConfigMap(@Nullable io.pulumi.kubernetes.core.v1.inputs.ConfigMapVolumeSourceArgs configMap) {
            this.configMap = Input.ofNullable(configMap);
            return this;
        }

        public Builder setCsi(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs> csi) {
            this.csi = csi;
            return this;
        }

        public Builder setCsi(@Nullable io.pulumi.kubernetes.core.v1.inputs.CSIVolumeSourceArgs csi) {
            this.csi = Input.ofNullable(csi);
            return this;
        }

        public Builder setDownwardAPI(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs> downwardAPI) {
            this.downwardAPI = downwardAPI;
            return this;
        }

        public Builder setDownwardAPI(@Nullable io.pulumi.kubernetes.core.v1.inputs.DownwardAPIVolumeSourceArgs downwardAPI) {
            this.downwardAPI = Input.ofNullable(downwardAPI);
            return this;
        }

        public Builder setEmptyDir(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs> emptyDir) {
            this.emptyDir = emptyDir;
            return this;
        }

        public Builder setEmptyDir(@Nullable io.pulumi.kubernetes.core.v1.inputs.EmptyDirVolumeSourceArgs emptyDir) {
            this.emptyDir = Input.ofNullable(emptyDir);
            return this;
        }

        public Builder setEphemeral(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs> ephemeral) {
            this.ephemeral = ephemeral;
            return this;
        }

        public Builder setEphemeral(@Nullable io.pulumi.kubernetes.core.v1.inputs.EphemeralVolumeSourceArgs ephemeral) {
            this.ephemeral = Input.ofNullable(ephemeral);
            return this;
        }

        public Builder setFc(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs> fc) {
            this.fc = fc;
            return this;
        }

        public Builder setFc(@Nullable io.pulumi.kubernetes.core.v1.inputs.FCVolumeSourceArgs fc) {
            this.fc = Input.ofNullable(fc);
            return this;
        }

        public Builder setFlexVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs> flexVolume) {
            this.flexVolume = flexVolume;
            return this;
        }

        public Builder setFlexVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.FlexVolumeSourceArgs flexVolume) {
            this.flexVolume = Input.ofNullable(flexVolume);
            return this;
        }

        public Builder setFlocker(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs> flocker) {
            this.flocker = flocker;
            return this;
        }

        public Builder setFlocker(@Nullable io.pulumi.kubernetes.core.v1.inputs.FlockerVolumeSourceArgs flocker) {
            this.flocker = Input.ofNullable(flocker);
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs> gcePersistentDisk) {
            this.gcePersistentDisk = gcePersistentDisk;
            return this;
        }

        public Builder setGcePersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.GCEPersistentDiskVolumeSourceArgs gcePersistentDisk) {
            this.gcePersistentDisk = Input.ofNullable(gcePersistentDisk);
            return this;
        }

        public Builder setGitRepo(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs> gitRepo) {
            this.gitRepo = gitRepo;
            return this;
        }

        public Builder setGitRepo(@Nullable io.pulumi.kubernetes.core.v1.inputs.GitRepoVolumeSourceArgs gitRepo) {
            this.gitRepo = Input.ofNullable(gitRepo);
            return this;
        }

        public Builder setGlusterfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs> glusterfs) {
            this.glusterfs = glusterfs;
            return this;
        }

        public Builder setGlusterfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.GlusterfsVolumeSourceArgs glusterfs) {
            this.glusterfs = Input.ofNullable(glusterfs);
            return this;
        }

        public Builder setHostPath(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs> hostPath) {
            this.hostPath = hostPath;
            return this;
        }

        public Builder setHostPath(@Nullable io.pulumi.kubernetes.core.v1.inputs.HostPathVolumeSourceArgs hostPath) {
            this.hostPath = Input.ofNullable(hostPath);
            return this;
        }

        public Builder setIscsi(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs> iscsi) {
            this.iscsi = iscsi;
            return this;
        }

        public Builder setIscsi(@Nullable io.pulumi.kubernetes.core.v1.inputs.ISCSIVolumeSourceArgs iscsi) {
            this.iscsi = Input.ofNullable(iscsi);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setNfs(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs> nfs) {
            this.nfs = nfs;
            return this;
        }

        public Builder setNfs(@Nullable io.pulumi.kubernetes.core.v1.inputs.NFSVolumeSourceArgs nfs) {
            this.nfs = Input.ofNullable(nfs);
            return this;
        }

        public Builder setPersistentVolumeClaim(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs> persistentVolumeClaim) {
            this.persistentVolumeClaim = persistentVolumeClaim;
            return this;
        }

        public Builder setPersistentVolumeClaim(@Nullable io.pulumi.kubernetes.core.v1.inputs.PersistentVolumeClaimVolumeSourceArgs persistentVolumeClaim) {
            this.persistentVolumeClaim = Input.ofNullable(persistentVolumeClaim);
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs> photonPersistentDisk) {
            this.photonPersistentDisk = photonPersistentDisk;
            return this;
        }

        public Builder setPhotonPersistentDisk(@Nullable io.pulumi.kubernetes.core.v1.inputs.PhotonPersistentDiskVolumeSourceArgs photonPersistentDisk) {
            this.photonPersistentDisk = Input.ofNullable(photonPersistentDisk);
            return this;
        }

        public Builder setPortworxVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs> portworxVolume) {
            this.portworxVolume = portworxVolume;
            return this;
        }

        public Builder setPortworxVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.PortworxVolumeSourceArgs portworxVolume) {
            this.portworxVolume = Input.ofNullable(portworxVolume);
            return this;
        }

        public Builder setProjected(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs> projected) {
            this.projected = projected;
            return this;
        }

        public Builder setProjected(@Nullable io.pulumi.kubernetes.core.v1.inputs.ProjectedVolumeSourceArgs projected) {
            this.projected = Input.ofNullable(projected);
            return this;
        }

        public Builder setQuobyte(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs> quobyte) {
            this.quobyte = quobyte;
            return this;
        }

        public Builder setQuobyte(@Nullable io.pulumi.kubernetes.core.v1.inputs.QuobyteVolumeSourceArgs quobyte) {
            this.quobyte = Input.ofNullable(quobyte);
            return this;
        }

        public Builder setRbd(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs> rbd) {
            this.rbd = rbd;
            return this;
        }

        public Builder setRbd(@Nullable io.pulumi.kubernetes.core.v1.inputs.RBDVolumeSourceArgs rbd) {
            this.rbd = Input.ofNullable(rbd);
            return this;
        }

        public Builder setScaleIO(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs> scaleIO) {
            this.scaleIO = scaleIO;
            return this;
        }

        public Builder setScaleIO(@Nullable io.pulumi.kubernetes.core.v1.inputs.ScaleIOVolumeSourceArgs scaleIO) {
            this.scaleIO = Input.ofNullable(scaleIO);
            return this;
        }

        public Builder setSecret(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs> secret) {
            this.secret = secret;
            return this;
        }

        public Builder setSecret(@Nullable io.pulumi.kubernetes.core.v1.inputs.SecretVolumeSourceArgs secret) {
            this.secret = Input.ofNullable(secret);
            return this;
        }

        public Builder setStorageos(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs> storageos) {
            this.storageos = storageos;
            return this;
        }

        public Builder setStorageos(@Nullable io.pulumi.kubernetes.core.v1.inputs.StorageOSVolumeSourceArgs storageos) {
            this.storageos = Input.ofNullable(storageos);
            return this;
        }

        public Builder setVsphereVolume(@Nullable Input<io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs> vsphereVolume) {
            this.vsphereVolume = vsphereVolume;
            return this;
        }

        public Builder setVsphereVolume(@Nullable io.pulumi.kubernetes.core.v1.inputs.VsphereVirtualDiskVolumeSourceArgs vsphereVolume) {
            this.vsphereVolume = Input.ofNullable(vsphereVolume);
            return this;
        }

        public VolumeArgs build() {
            return new VolumeArgs(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
        }
    }
}
